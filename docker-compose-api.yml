version: "3.9"
services:
  ###############################################################################
  # The main API 
  ###############################################################################
  api:
    image: "ojmakhura/${API_IMAGE_NAME}:${IMAGE_VERSION}${IMAGE_VERSION_SUFFIX}"
    container_name: bocra-api
    hostname: api
    healthcheck:
      test: "curl -m 5 --silent --fail --request GET http://localhost:8085/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 5s
    build:
      context: .
      dockerfile: bocraportal/webservice/Dockerfile
      args:
        CERT: ${CERT}
        CERT_PASSWORD: ${CERT_PASSWORD}
    networks:
      traefik-public:
    environment:
      POSTGRES_SERVER: ${BOCRA_DB_ADDRESS}
      SERVER_PORT: ${API_SERVER_PORT}
      POSTGRES_SERVER_PORT: ${POSTGRES_SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      KEYCLOAK_AUTH_URL: ${KEYCLOAK_AUTH_URL}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_API_CLIENT: ${KEYCLOAK_API_CLIENT}
      KEYCLOAK_API_CLIENT_SECRET: ${KEYCLOAK_API_CLIENT_SECRET}
      BOCRA_KEYCLOAK_ADDRESS: ${BOCRA_KEYCLOAK_ADDRESS}
      CERT: ${CERT}
      CERT_PASSWORD: ${CERT_PASSWORD}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_SERVICE_PORT: ${RABBITMQ_SERVICE_PORT}
      API_LOG_LEVEL: ${API_LOG_LEVEL}
      WEB_URL: ${WEB_URL}
      COMM_URL: ${COMM_URL}
      TZ: Africa/Gaborone
    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          - node.labels.bocra_api == true
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api-web.rule=Host(`${API_DOMAIN}`)"
        - "traefik.http.routers.api-web.entrypoints=web"
        - "traefik.http.routers.api-web.middlewares=https-redirect"
        - "traefik.http.routers.api-websecure.entrypoints=websecure"
        - "traefik.http.routers.api-websecure.rule=Host(`${API_DOMAIN}`)"
        - "traefik.http.routers.api-websecure.tls=${SSL_SECURE}"
###############################################################################
# Networks
###############################################################################
networks:
  traefik-public: