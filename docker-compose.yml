version: "3.3"
services:

  ###############################################################################
  # Traefik proxy
  ###############################################################################
  proxy:
    image: traefik:2.6
    container_name: bocra-proxy
    hostname: traefik
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_PROXY_ADDRESS}
      traefik-public:
      default:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /bocra/traefik:/bocra/traefik
    ports:
      - 80:80
      - 8080:8080
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      traefik.http.routers.bocra-proxy.rule: Host(`proxy.${DOMAIN}`)
      traefik.http.routers.bocra-proxy.service: api@internal

  ###############################################################################
  # Postgres database
  ###############################################################################
  db:
    container_name: bocra-db
    hostname: db
    image: postgres:14
    volumes:
      - app-db-data:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    depends_on:
      - proxy
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_DB_ADDRESS}
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-db.rule=Host(`db.${DOMAIN}`)"
        # - "traefik.http.routers.bocra-db.entrypoints=websecure"
        #- "traefik.http.routers.bocra-db.tls.certresolver=myresolver"

  ###############################################################################
  # Postgres administration frontend
  ###############################################################################
  pgadmin:
    image: dpage/pgadmin4
    container_name: bocra-pgadmin
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_PGADMIN_ADDRESS}
      default:
    depends_on:
      - proxy
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    #ports:
    #  - "8000:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-pgadmin.rule=Host(`pgadmin.${DOMAIN}`)"

  ###############################################################################
  # Keycloak authentication server
  ###############################################################################
  keycloak:
    container_name: bocra-keycloak
    hostname: bocra-keycloak
    image: "bocra-keycloak:latest"
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: POSTGRES
      DB_ADDR: bocra-db
      DB_DATABASE: ${KEYCLOAK_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    depends_on:
      - db
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    #volumes:
    #  - keycloak-installation:/opt/jboss/keycloak
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_KEYCLOAK_ADDRESS}
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-keycloak.rule=Host(`keycloak.${DOMAIN}`)"

  ###############################################################################
  # Angular web application
  ###############################################################################
  web:
    image: "bocra-web:latest"
    hostname: web
    build:
      context: .
      dockerfile: bocraportal/angular/Dockerfile
    container_name: bocra-web
    env_file:
      - .env
    volumes:
      - web-app-data:/web
    depends_on:
      - db
      - keycloak
      - api
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_WEB_ADDRESS}
      default:
        #ports:
        #  - 3100:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-web.rule=Host(`${DOMAIN}`)"

  ###############################################################################
  # The main API 
  ###############################################################################
  api:
    image: "bocra-api:latest"
    container_name: bocra-api
    hostname: api
    env_file:
      - .env
    depends_on:
      - db
      - keycloak
    ports:
      - ${API_SERVER_PORT}
    build:
      context: .
      dockerfile: bocraportal/webservice/Dockerfile
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_API_ADDRESS}
      traefik-public:
      default:
    environment:
      POSTGRES_SERVER: bocra-db
      SERVER_PORT: ${API_SERVER_PORT}
      POSTGRES_SERVER_PORT: ${POSTGRES_SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-api.rule=Host(`api.${DOMAIN}`)"

  ###############################################################################
  # Local docker container registry
  ###############################################################################
  registry:
    image: registry:2
    ports:
      - 5000:5000
    env_file:
      - .env
    depends_on:
      - proxy
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: ${REGISTRY_HTTP_TLS_CERTIFICATE}
      REGISTRY_HTTP_TLS_KEY: ${REGISTRY_HTTP_TLS_KEY}
      REGISTRY_AUTH: ${REGISTRY_AUTH}
      REGISTRY_AUTH_HTPASSWD_PATH: ${REGISTRY_AUTH_HTPASSWD_PATH}
      REGISTRY_AUTH_HTPASSWD_REALM: ${REGISTRY_AUTH_HTPASSWD_REALM}
    volumes:
      - registry-data:/var/lib/registry
      - registry-certs:/certs
      - registry-auth:/auth
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_REGISTRY_ADDRESS}
      traefik-public:
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-registry.rule=Host(`registry.${DOMAIN}`)"
  
  ###############################################################################
  # Jenkins for CI/CD
  ###############################################################################
  jenkins:
    container_name: bocra-jenkins
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8083:8080
      - 50003:50000
    depends_on:
      - proxy
    env_file:
      - .env
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_JENKINS_ADDRESS}
      traefik-public:
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-jenkins.rule=Host(`jenkins.${DOMAIN}`)"

###############################################################################
# Volumes
###############################################################################
volumes:
  app-db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/db
  web-app-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/web
  pgadmin-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/pgadmin
  keycloak-installation:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/keycloak
  traefik-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/traefik
  registry-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/registry/data
  registry-certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/registry/certs
  registry-auth:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/registry/auth
  jenkins-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${BOCRA_DATA}/jenkins

###############################################################################
# Networks
###############################################################################
networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true
  bocra-network:
    name: bocra-network
    driver: bridge
    external: false
    ipam:
      driver: default
      config:
        - subnet: 192.168.57.0/24
