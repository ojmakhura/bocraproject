version: "3.9"
services:

  ###############################################################################
  # Traefik proxy
  ###############################################################################
  proxy:
    image: traefik:2.6
    container_name: bocra-proxy
    hostname: traefik
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_PROXY_ADDRESS}
      traefik-public:
      default:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BOCRA_DATA}/traefik/acme:/acme
      # - traefik-data
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      #- --entrypoints.websecure.address=:443
      - --api
    labels:
    #  traefik.http.routers.bocra-proxy.rule: Host(`${PROXY_DOMAIN}`)
    #  traefik.http.routers.bocra-proxy.service: api@internal
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`${PROXY_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
    #  - "traefik.http.routers.traefik.middlewares=admin"
    #  - "traefik.http.routers.traefik.tls.certresolver=le"
    #  - "traefik.http.middlewares.admin.basicauth.users=userXY:pwXY"
    # global redirect to https
    #  - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    #  - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
    #  - "traefik.http.routers.redirs.entrypoints=web"
    #  - "traefik.http.routers.redirs.middlewares=redirect-to-https"

  ###############################################################################
  # Postgres database
  ###############################################################################
  db:
    container_name: bocra-db
    hostname: db
    image: postgres:14
    volumes:
      - ${BOCRA_DATA}/db:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    # env_file:
    #  - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - proxy
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_DB_ADDRESS}
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-db.rule=Host(`${DB_DOMAIN}`)"
        # - "traefik.http.routers.bocra-db.entrypoints=websecure"
        #- "traefik.http.routers.bocra-db.tls.certresolver=myresolver"

  ###############################################################################
  # Postgres administration frontend
  ###############################################################################
  pgadmin:
    image: dpage/pgadmin4
    container_name: bocra-pgadmin
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_PGADMIN_ADDRESS}
      default:
    depends_on:
      - proxy
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "9000:80"
    #volumes:
    #  - ${BOCRA_DATA}/pgadmin:/var/lib/pgadmin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-pgadmin.rule=Host(`${PGADMIN_DOMAIN}`)"

  ###############################################################################
  # Keycloak authentication server
  ###############################################################################
  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2-legacy
    hostname: keycloak
    #build:
    #  context: .
    #  dockerfile: Dockerfile.keycloak
    container_name: bocra-keycloak
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      DB_VENDOR: POSTGRES
      DB_ADDR: ${POSTGRES_SERVER}
      DB_DATABASE: ${KEYCLOAK_DB}
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    depends_on:
      - db
    ports:
      - 8089:8080
    #volumes:
    #  - ${BOCRA_DATA}/keycloak:/opt/jboss/keycloak
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_KEYCLOAK_ADDRESS}
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-keycloak.rule=Host(`${KEYCLOAK_DOMAIN}`)"

  ###############################################################################
  # Angular web application
  ###############################################################################
  web:
    image: "bocra-web:latest"
    hostname: web
    build:
      context: .
      dockerfile: bocraportal/angular/Dockerfile
    container_name: bocra-web
    # env_file:
    #   - .env
    volumes:
      - ${BOCRA_DATA}/web:/web
    depends_on:
      - db
      - keycloak
      - api
    networks:
      traefik-public:
      bocra-network:
        ipv4_address: ${BOCRA_WEB_ADDRESS}
      default:
    ports:
        - 9080:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-web.rule=Host(`${WEB_DOMAIN}`)"

  ###############################################################################
  # The main API 
  ###############################################################################
  api:
    image: "bocra-api:latest"
    container_name: bocra-api
    hostname: api
    # env_file:
    #   - .env
    depends_on:
      - db
      - keycloak
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
    build:
      context: .
      dockerfile: bocraportal/webservice/Dockerfile
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_API_ADDRESS}
      traefik-public:
      default:
    environment:
      POSTGRES_SERVER: ${BOCRA_DB_ADDRESS}
      SERVER_PORT: ${API_SERVER_PORT}
      POSTGRES_SERVER_PORT: ${POSTGRES_SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      KEYCLOAK_AUTH_URL: ${KEYCLOAK_AUTH_URL}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-api.rule=Host(`${API_DOMAIN}`)"

  ###############################################################################
  # Local docker container registry
  ###############################################################################
  registry:
    image: registry:2
    container_name: bocra-registry
    ports:
      - 5000:5000
    depends_on:
      - proxy
    environment:
      #REGISTRY_HTTP_TLS_CERTIFICATE: ${REGISTRY_HTTP_TLS_CERTIFICATE}
      #REGISTRY_HTTP_TLS_KEY: ${REGISTRY_HTTP_TLS_KEY}
      REGISTRY_AUTH: ${REGISTRY_AUTH}
      REGISTRY_AUTH_HTPASSWD_PATH: ${REGISTRY_AUTH_HTPASSWD_PATH}
      REGISTRY_AUTH_HTPASSWD_REALM: ${REGISTRY_AUTH_HTPASSWD_REALM}
    volumes:
      - ${BOCRA_DATA}/registry/data:/var/lib/registry
      - ${BOCRA_DATA}/registry/certs:/certs
      - ${BOCRA_DATA}/registry/auth:/auth
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_REGISTRY_ADDRESS}
      traefik-public:
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-registry.rule=Host(`${REGISTRY_DOMAIN}`)"
  
  ###############################################################################
  # Jenkins for CI/CD
  ###############################################################################
  jenkins:
    container_name: bocra-jenkins
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8083:8080
      - 50003:50000
    depends_on:
      - proxy
    env_file:
      - .env
    volumes:
      - ${BOCRA_DATA}/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      bocra-network:
        ipv4_address: ${BOCRA_JENKINS_ADDRESS}
      traefik-public:
      default:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bocra-jenkins.rule=Host(`${JENKINS_DOMAIN}`)"

###############################################################################
# Networks
###############################################################################
networks:
  traefik-public:
    # Allow setting it to false for testing
    external: true
  bocra-network:
    name: bocra-network
    driver: bridge
    external: false
    ipam:
      driver: default
      config:
        - subnet: 192.168.57.0/24
  bocra-elk:
    name: bocra-elk
    driver: bridge
