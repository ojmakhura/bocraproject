// license-header java merge-point
//
/**
 * @author Generated by TypeSafeEnumeration.vsl in andromda-java-cartridge on 02/01/2023 19:23:12+0200 Do not modify by hand!
 *
 * TEMPLATE:     TypeSafeEnumeration.vsl in andromda-java-cartridge.
 * MODEL CLASS:  bocraportal::backend::bw.org.bocra.portal::message::BocraMesssagePlatform
 */
//
package bw.org.bocra.portal.message;

import java.util.ArrayList;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 * TODO: Model Documentation for bw.org.bocra.portal.message.BocraMesssagePlatform
 */
public enum BocraMesssagePlatform
{
    /** TODO: Model Documentation for Enumeration Literal SMS value "SMS" */
    SMS("SMS"),
    /** TODO: Model Documentation for Enumeration Literal EMAIL value "EMAIL" */
    EMAIL("EMAIL");

    /**
     * The serial version UID of this class. Needed for serialization.
     */
    private static final long serialVersionUID = -5215390915753278354L;

    private final String enumValue;

    /**
     * The constructor with enumeration literal value allowing
     * super classes to access it.
     */
    private BocraMesssagePlatform(String value)
    {
        this.enumValue = value;
    }

    /*
     * Do not override this method directly. Use an alternate name
     * if providing a different toString implementation
     * @see Object#toString()
    @Override
    public String toString()
    {
        return String.valueOf(this.enumValue);
    }
     */

    /**
     * Retrieves an instance of BocraMesssagePlatform from <code>its name</code>.
     *
     * @param name the name to create the BocraMesssagePlatform from.
     * @return The enumeration literal named after the 'name' argument
     */
    public static BocraMesssagePlatform fromString(String name)
    {
        return BocraMesssagePlatform.valueOf(name);
    }

    /**
     * Returns an enumeration literal String <code>value</code>.
     * Required by JAXB2 enumeration implementation
     *
     * @return String with corresponding value
     */
    public String value()
    {
        return this.enumValue;
    }

    /**
     * Returns an instance of BocraMesssagePlatform from String <code>value</code>.
     * Required by JAXB2 enumeration implementation
     *
     * @param value the value to create the BocraMesssagePlatform from.
     * @return static Enumeration with corresponding value
     */
    public static BocraMesssagePlatform fromValue(String value)
    {
        // Allow either the Enum name or value string to be used to retrieve the enum
        for (BocraMesssagePlatform enumName: BocraMesssagePlatform.values())
        {
            if (enumName.getValue().equals(value))
            {
                return enumName;
            }
        }
        for (String enumName: BocraMesssagePlatform.names())
        {
            if (enumName.equals(value))
            {
                return BocraMesssagePlatform.valueOf(enumName);
            }
        }
        throw new IllegalArgumentException("BocraMesssagePlatform.fromValue(" + value + ')');
    }

    /**
     * Gets the underlying value of this type safe enumeration.
     * This method is necessary to comply with DaoBase implementation.
     * @return The name of this literal.
     */
    public String getValue()
    {
        return this.enumValue;
    }

    /**
     * Returns an unmodifiable list containing the literals that are known by this enumeration.
     *
     * @return A List containing the actual literals defined by this enumeration, this list
     *         can not be modified.
     */
    public static List<String> literals()
    {
        return BocraMesssagePlatform.literals;
    }

    /**
     * Returns an unmodifiable list containing the names of the literals that are known
     * by this enumeration.
     *
     * @return A List containing the actual names of the literals defined by this
     *         enumeration, this list can not be modified.
     */
    public static List<String> names()
    {
        return BocraMesssagePlatform.names;
    }

    private static Map<String, BocraMesssagePlatform> values = new LinkedHashMap<String, BocraMesssagePlatform>(2, 1);
    private static List<String> literals = new ArrayList<String>(2);
    private static List<String> names = new ArrayList<String>(2);
    private static List<BocraMesssagePlatform> valueList = new ArrayList<BocraMesssagePlatform>(2);

    /**
     * Initializes the values.
     */
    static
    {
        synchronized (BocraMesssagePlatform.values)
        {
            BocraMesssagePlatform.values.put(SMS.enumValue, SMS);
            BocraMesssagePlatform.values.put(EMAIL.enumValue, EMAIL);
        }
        synchronized (BocraMesssagePlatform.valueList)
        {
            BocraMesssagePlatform.valueList.add(SMS);
            BocraMesssagePlatform.valueList.add(EMAIL);
            BocraMesssagePlatform.valueList = Collections.unmodifiableList(valueList);
        }
        synchronized (BocraMesssagePlatform.literals)
        {
            BocraMesssagePlatform.literals.add(SMS.enumValue);
            BocraMesssagePlatform.literals.add(EMAIL.enumValue);
            BocraMesssagePlatform.literals = Collections.unmodifiableList(literals);
        }
        synchronized (BocraMesssagePlatform.names)
        {
            BocraMesssagePlatform.names.add("SMS");
            BocraMesssagePlatform.names.add("EMAIL");
            BocraMesssagePlatform.names = Collections.unmodifiableList(names);
        }
    }
    // type-safe-enumeration-object java merge-point
}