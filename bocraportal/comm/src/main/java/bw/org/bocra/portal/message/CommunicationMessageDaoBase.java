// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand! hibernate4or5=true hibernateVersion=5.6.3.Final
// Generated by hibernate/SpringHibernateDaoBase.vsl in andromda-spring-cartridge on $springUtils.date. Do not modify by hand!.
//
package bw.org.bocra.portal.message;

/**
 * <p>
 * Base Spring DAO Class: is able to create, update, remove, load, and find
 * objects of type <code>bw.org.bocra.portal.message.CommunicationMessage</code>.
 * </p>
 *
 * @see bw.org.bocra.portal.message.CommunicationMessage
 */
public abstract class CommunicationMessageDaoBase
    implements bw.org.bocra.portal.message.CommunicationMessageDao
{

    protected final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(CommunicationMessageDaoBase.class);

    protected final bw.org.bocra.portal.message.CommunicationMessageRepository communicationMessageRepository;

    public CommunicationMessageDaoBase(
        bw.org.bocra.portal.message.CommunicationMessageRepository communicationMessageRepository
    ) {
        this.communicationMessageRepository = communicationMessageRepository;
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Object get(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.get - 'id' can not be null");
        }
        java.util.Optional<bw.org.bocra.portal.message.CommunicationMessage> entity = communicationMessageRepository.findById(id);
        return transformEntity(transform, entity.get());
    }
    /**
     * {@inheritDoc}
     */
    @Override
    public bw.org.bocra.portal.message.CommunicationMessage get(java.lang.Long id)
    {
        return (bw.org.bocra.portal.message.CommunicationMessage)this.get(TRANSFORM_NONE, id);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object load(final int transform, final java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.load - 'id' can not be null");
        }
        java.util.Optional<bw.org.bocra.portal.message.CommunicationMessage> entity = communicationMessageRepository.findById(id);
        return transformEntity(transform, entity.get());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public bw.org.bocra.portal.message.CommunicationMessage load(java.lang.Long id)
    {
        return (bw.org.bocra.portal.message.CommunicationMessage)this.load(TRANSFORM_NONE, id);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> loadAll()
    {
        return (java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage>) this.loadAll(bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.util.Collection<?> loadAll(final int transform)
    {
        return this.loadAll(transform, -1, -1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.util.Collection<?> loadAll(final int pageNumber, final int pageSize)
    {
        return this.loadAll(bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE, pageNumber, pageSize);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.util.Collection<?> loadAll(final int transform, final int pageNumber, final int pageSize)
    {
		
        final java.util.Collection<?> results;
        if(pageNumber < 0 || pageSize < 0) {
            results = communicationMessageRepository.findAll();
        } else {
            results = communicationMessageRepository.findAll(org.springframework.data.domain.PageRequest.of(pageSize, pageSize)).getContent();
        }
        this.transformEntities(transform, results);
        return results;
    }

    /**
     * firstResult = (pageNumber - 1) * pageSize
     * @param pageNumber
     * @param pageSize
     * @return firstResult
     */
    protected int calculateFirstResult(int pageNumber, int pageSize)
    {
        int firstResult = 0;
        if (pageNumber > 0)
        {
            firstResult = (pageNumber - 1) * pageSize;
        }
        return firstResult;
    }

    /**
     * prePersist event - This method is called before creating the entity
     * @param communicationMessage bw.org.bocra.portal.message.CommunicationMessage
     */
    protected void _prePersist(final bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        // Abstract method - your implementation goes in the descendant
    }

    /**
     * postPersist event - This method is called after creating the entity
     * @param communicationMessage bw.org.bocra.portal.message.CommunicationMessage
     */
    protected void _postPersist(final bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        // Abstract method - your implementation goes in the descendant
    }

    /**
     * preUpdate event - This method is called before updating the entity
     * @param communicationMessage bw.org.bocra.portal.message.CommunicationMessage
     */
    protected void _preUpdate(final bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        // Abstract method - your implementation goes in the descendant
    }

    /**
     * postUpdate event - This method is called after updating the entity
     * @param communicationMessage bw.org.bocra.portal.message.CommunicationMessage
     */
    protected void _postUpdate(final bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        // Abstract method - your implementation goes in the descendant
    }

    /**
     * preRemove event - This method is called before deleting the entity
     * @param communicationMessage bw.org.bocra.portal.message.CommunicationMessage
     */
    protected void _preRemove(final bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        // Abstract method - your implementation goes in the descendant
    }

    /**
     * postRemove event - This method is called after deleting the entity
     * @param communicationMessage bw.org.bocra.portal.message.CommunicationMessage
     */
    protected void _postRemove(final bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        // Abstract method - your implementation goes in the descendant
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public bw.org.bocra.portal.message.CommunicationMessage create(bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        return (bw.org.bocra.portal.message.CommunicationMessage)this.create(bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE, communicationMessage);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object create(final int transform, bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        if (communicationMessage == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.create - 'communicationMessage' can not be null");
        }

        //prePersist event
        _prePersist(communicationMessage);

        communicationMessage = this.communicationMessageRepository.save(communicationMessage);

        //postPersist event
        _postPersist(communicationMessage);

        return this.transformEntity(transform, communicationMessage);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> create(final java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> entities)
    {
        return (java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage>) create(bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE, entities);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.util.Collection<?> create(final int transform, final java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.create - 'entities' can not be null");
        }
        java.util.Collection<Object> transformed = new java.util.ArrayList<Object>();
        for (bw.org.bocra.portal.message.CommunicationMessage entity : entities)
        {
            transformed.add(create(transform, entity));
        }
        return transformed;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public bw.org.bocra.portal.message.CommunicationMessage create(
        java.lang.String createdBy,
        java.lang.String updatedBy,
        java.time.LocalDateTime createdDate,
        java.time.LocalDateTime updatedDate,
        java.util.Collection<java.lang.String> destinations,
        java.lang.Boolean sendNow,
        java.lang.String subject,
        java.lang.String source,
        java.lang.String text,
        java.time.LocalDateTime dispatchDate,
        bw.org.bocra.portal.message.CommunicationMessagePlatform messagePlatform,
        bw.org.bocra.portal.message.CommunicationMessageStatus status)
    {
        return (bw.org.bocra.portal.message.CommunicationMessage)this.create(bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE, createdBy, updatedBy, createdDate, updatedDate, destinations, sendNow, subject, source, text, dispatchDate, messagePlatform, status);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object create(
        final int transform,
        java.lang.String createdBy,
        java.lang.String updatedBy,
        java.time.LocalDateTime createdDate,
        java.time.LocalDateTime updatedDate,
        java.util.Collection<java.lang.String> destinations,
        java.lang.Boolean sendNow,
        java.lang.String subject,
        java.lang.String source,
        java.lang.String text,
        java.time.LocalDateTime dispatchDate,
        bw.org.bocra.portal.message.CommunicationMessagePlatform messagePlatform,
        bw.org.bocra.portal.message.CommunicationMessageStatus status)
    {
        bw.org.bocra.portal.message.CommunicationMessage entity = new bw.org.bocra.portal.message.CommunicationMessage();
        entity.setCreatedBy(createdBy);
        entity.setUpdatedBy(updatedBy);
        entity.setCreatedDate(createdDate);
        entity.setUpdatedDate(updatedDate);
        entity.setDestinations(destinations);
        entity.setSendNow(sendNow);
        entity.setSubject(subject);
        entity.setSource(source);
        entity.setText(text);
        entity.setDispatchDate(dispatchDate);
        entity.setMessagePlatform(messagePlatform);
        entity.setStatus(status);
        return this.create(transform, entity);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void update(bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        if (communicationMessage == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.update - 'communicationMessage' can not be null");
        }

        //preUpdate event
        _preUpdate(communicationMessage);

        communicationMessage = this.communicationMessageRepository.save(communicationMessage);

        //postUpdate event
        _postUpdate(communicationMessage);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void update(final java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.update - 'entities' can not be null");
        }
        for (bw.org.bocra.portal.message.CommunicationMessage entity : entities)
        {
            update(entity);
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void remove(bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        if (communicationMessage == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.remove - 'communicationMessage' can not be null");
        }
        //preRemove event
        _preRemove(communicationMessage);

        this.communicationMessageRepository.delete(communicationMessage);

        //postRemove event
        _postRemove(communicationMessage);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void remove(java.lang.Long id)
    {
        if (id == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.remove - 'id' can not be null");
        }
        bw.org.bocra.portal.message.CommunicationMessage entity = this.get(id);
        if (entity != null)
        {
            this.remove(entity);
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void remove(java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> entities)
    {
        if (entities == null)
        {
            throw new IllegalArgumentException(
                "CommunicationMessage.remove - 'entities' can not be null");
        }
        for (bw.org.bocra.portal.message.CommunicationMessage entity : entities)
        {
            //preRemove event
            _preRemove(entity);

            this.communicationMessageRepository.delete(entity);

            //postRemove event
            _postRemove(entity);
        }
    }
    /**
     * Allows transformation of entities into value objects
     * (or something else for that matter), when the <code>transform</code>
     * flag is set to one of the constants defined in <code>bw.org.bocra.portal.message.CommunicationMessageDao</code>, please note
     * that the {@link #TRANSFORM_NONE} constant denotes no transformation, so the entity itself
     * will be returned.
     * <p>
     * This method will return instances of these types:
     * <ul>
     *   <li>{@link bw.org.bocra.portal.message.CommunicationMessage} - {@link #TRANSFORM_NONE}</li>
     *   <li>{@link bw.org.bocra.portal.message.CommunicationMessageVO} - {@link #TRANSFORM_COMMUNICATIONMESSAGEVO}</li>
     * </ul>
     *
     * If the integer argument value is unknown {@link #TRANSFORM_NONE} is assumed.
     *
     * @param transform one of the constants declared in {@link bw.org.bocra.portal.message.CommunicationMessageDao}
     * @param entity an entity that was found
     * @return the transformed entity (i.e. new value object, etc)
     * @see bw.org.bocra.portal.message.CommunicationMessageDao#transformEntity(int, bw.org.bocra.portal.message.CommunicationMessage)
     */
    @Override
    public Object transformEntity(final int transform, final bw.org.bocra.portal.message.CommunicationMessage entity)
    {
        Object target = null;
        if (entity != null)
        {
            switch (transform)
            {
                case TRANSFORM_COMMUNICATIONMESSAGEVO :
                    target = toCommunicationMessageVO(entity);
                    break;
                case bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE : // fall-through
                default:
                    target = entity;
            }
        }
        return target;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void transformEntities(final int transform, final java.util.Collection<?> entities)
    {
        switch (transform)
        {
            case TRANSFORM_COMMUNICATIONMESSAGEVO :
                org.apache.commons.collections4.CollectionUtils.transform(entities, this.COMMUNICATIONMESSAGEVO_TRANSFORMER);
                break;
            case bw.org.bocra.portal.message.CommunicationMessageDao.TRANSFORM_NONE : // fall-through
                default:
                // do nothing;
        }
    }

    /**
     * @see bw.org.bocra.portal.message.CommunicationMessageDao#toEntities(java.util.Collection)
     */
    @Override
    public void toEntities(final java.util.Collection<?> results)
    {
        if (results != null)
        {
            org.apache.commons.collections4.CollectionUtils.transform(results, this.ENTITYTRANSFORMER);
        }
    }

    /**
     * This anonymous transformer is designed to transform report query results
     * (which result in an array of entities) to {@link bw.org.bocra.portal.message.CommunicationMessage}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private org.apache.commons.collections4.Transformer ENTITYTRANSFORMER =
        new org.apache.commons.collections4.Transformer()
        {
            @Override
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof Object[])
                {
                    final Object[] rows = (Object[])input;
                    result = toEntity(rows);
                }
                else if (input instanceof bw.org.bocra.portal.message.CommunicationMessage)
                {
                    result = input;
                }
                return result;
            }
        };

    /**
     * @param row
     * @return bw.org.bocra.portal.message.CommunicationMessage
     */
    protected bw.org.bocra.portal.message.CommunicationMessage toEntity(Object[] row)
    {
        bw.org.bocra.portal.message.CommunicationMessage target = null;
        if (row != null)
        {
            final int numberOfObjects = row.length;
            for (int ctr = 0; ctr < numberOfObjects; ctr++)
            {
                final Object object = row[ctr];
                if (object instanceof bw.org.bocra.portal.message.CommunicationMessage)
                {
                    target = (bw.org.bocra.portal.message.CommunicationMessage)object;
                    break;
                }
            }
        }
        return target;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @SuppressWarnings({"unchecked"})
    public java.util.Collection<bw.org.bocra.portal.message.CommunicationMessageVO> toCommunicationMessageVOCollection(java.util.Collection<bw.org.bocra.portal.message.CommunicationMessage> entities)
    {
        if (entities == null)
        {
            return null;
        }
        @SuppressWarnings("rawtypes")
        java.util.Collection result = new java.util.ArrayList(entities);
        org.apache.commons.collections4.CollectionUtils.transform(result, this.COMMUNICATIONMESSAGEVO_TRANSFORMER);
        return result;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    @SuppressWarnings({ "unchecked" })
    public bw.org.bocra.portal.message.CommunicationMessageVO[] toCommunicationMessageVOArray(java.util.Collection<?> entities)
    {
        bw.org.bocra.portal.message.CommunicationMessageVO[] result = null;
        if (entities != null)
        {
        @SuppressWarnings("rawtypes")
            final java.util.Collection collection = new java.util.ArrayList(entities);
            this.toCommunicationMessageVOCollection(collection);
            result = (bw.org.bocra.portal.message.CommunicationMessageVO[]) collection.toArray(new bw.org.bocra.portal.message.CommunicationMessageVO[collection.size()]);
        }
        return result;
    }

    /**
     * Default implementation for transforming the results of a report query into a value object. This
     * implementation exists for convenience reasons only. It needs only be overridden in the
     * {@link CommunicationMessageDaoImpl} class if you intend to use reporting queries.
     * @param row
     * @return toCommunicationMessageVO(this.toEntity(row))
     * @see bw.org.bocra.portal.message.CommunicationMessageDao#toCommunicationMessageVO(bw.org.bocra.portal.message.CommunicationMessage)
     */
    protected bw.org.bocra.portal.message.CommunicationMessageVO toCommunicationMessageVO(Object[] row)
    {
        return this.toCommunicationMessageVO(this.toEntity(row));
    }

    /**
     * This anonymous transformer is designed to transform entities or report query results
     * (which result in an array of objects) to {@link bw.org.bocra.portal.message.CommunicationMessageVO}
     * using the Jakarta Commons-Collections Transformation API.
     */
    private org.apache.commons.collections4.Transformer COMMUNICATIONMESSAGEVO_TRANSFORMER =
        new org.apache.commons.collections4.Transformer()
        {
            @Override
            public Object transform(Object input)
            {
                Object result = null;
                if (input instanceof bw.org.bocra.portal.message.CommunicationMessage)
                {
                    final bw.org.bocra.portal.message.CommunicationMessage entity = (bw.org.bocra.portal.message.CommunicationMessage)input;
                    result = toCommunicationMessageVO(entity);
                }
                else if (input instanceof Object[])
                {
                    final Object[] rows = (Object[])input;
                    result = toCommunicationMessageVO(rows);
                }
                return result;
            }
        };

    /**
     * {@inheritDoc}
     */
    @Override
    public void communicationMessageVOToEntityCollection(java.util.Collection<?> instances)
    {
        if (instances != null)
        {
            for (final java.util.Iterator<?> iterator = instances.iterator(); iterator.hasNext();)
            {
                // - remove an objects that are null or not of the correct instance
                if (!(iterator.next() instanceof bw.org.bocra.portal.message.CommunicationMessageVO))
                {
                    iterator.remove();
                }
            }
            org.apache.commons.collections4.CollectionUtils.transform(instances, this.CommunicationMessageVOToEntityTransformer);
        }
    }

    private final org.apache.commons.collections4.Transformer CommunicationMessageVOToEntityTransformer =
        new org.apache.commons.collections4.Transformer()
        {
            @Override
            public Object transform(Object input)
            {
                return communicationMessageVOToEntity((bw.org.bocra.portal.message.CommunicationMessageVO)input);
            }
        };


    /**
     * {@inheritDoc}
     */
    @Override
    public void toCommunicationMessageVO(
        bw.org.bocra.portal.message.CommunicationMessage source,
        bw.org.bocra.portal.message.CommunicationMessageVO target)
    {
        target.setId(source.getId());
        target.setCreatedBy(source.getCreatedBy());
        target.setUpdatedBy(source.getUpdatedBy());
        target.setCreatedDate(source.getCreatedDate());
        target.setUpdatedDate(source.getUpdatedDate());
        target.setStatus(source.getStatus());
        target.setMessagePlatform(source.getMessagePlatform());
        target.setSendNow(source.getSendNow());
        target.setSubject(source.getSubject());
        if(org.apache.commons.collections4.CollectionUtils.isNotEmpty(target.getDestinations())){
            target.getDestinations().clear();
        } else {
            target.setDestinations(new java.util.ArrayList<>());
        }
        
        if(null!=source.getDestinations()) {
            target.getDestinations().addAll(source.getDestinations());
        }
        target.setSource(source.getSource());
        target.setText(source.getText());
        target.setDispatchDate(source.getDispatchDate());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public bw.org.bocra.portal.message.CommunicationMessageVO toCommunicationMessageVO(final bw.org.bocra.portal.message.CommunicationMessage entity)
    {
        bw.org.bocra.portal.message.CommunicationMessageVO target = null;
        if (entity != null)
        {
            target =  new bw.org.bocra.portal.message.CommunicationMessageVO();
            this.toCommunicationMessageVO(entity, target);
        }
        return target;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void communicationMessageVOToEntity(
        bw.org.bocra.portal.message.CommunicationMessageVO source,
        bw.org.bocra.portal.message.CommunicationMessage target,
        boolean copyIfNull)
    {
        if (copyIfNull || source.getCreatedBy() != null)
        {
            target.setCreatedBy(source.getCreatedBy());
        }
        if (copyIfNull || source.getUpdatedBy() != null)
        {
            target.setUpdatedBy(source.getUpdatedBy());
        }
        if (copyIfNull || source.getCreatedDate() != null)
        {
            target.setCreatedDate(source.getCreatedDate());
        }
        if (copyIfNull || source.getUpdatedDate() != null)
        {
            target.setUpdatedDate(source.getUpdatedDate());
        }
        if (copyIfNull || source.getDestinations() != null)
        {
            if(org.apache.commons.collections4.CollectionUtils.isNotEmpty(target.getDestinations())){
                target.getDestinations().clear();
            } else {
                target.setDestinations(new java.util.ArrayList<>());
            }
            if(null != source.getDestinations()) {
                target.getDestinations().addAll(source.getDestinations());
            }
        }
        if (copyIfNull || source.getSendNow() != null)
        {
            target.setSendNow(source.getSendNow());
        }
        if (copyIfNull || source.getSubject() != null)
        {
            target.setSubject(source.getSubject());
        }
        if (copyIfNull || source.getSource() != null)
        {
            target.setSource(source.getSource());
        }
        if (copyIfNull || source.getText() != null)
        {
            target.setText(source.getText());
        }
        if (copyIfNull || source.getDispatchDate() != null)
        {
            target.setDispatchDate(source.getDispatchDate());
        }
        if (copyIfNull || source.getMessagePlatform() != null)
        {
            target.setMessagePlatform(source.getMessagePlatform());
        }
        if (copyIfNull || source.getStatus() != null)
        {
            target.setStatus(source.getStatus());
        }
    }

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return bw.org.bocra.portal.PrincipalStore.get();
    }


    /**
     * Create or Update the <code>communicationMessage</code> instance in the persistent store.
     * @param communicationMessage
     */
    @Override
    public bw.org.bocra.portal.message.CommunicationMessage createOrUpdate(bw.org.bocra.portal.message.CommunicationMessage communicationMessage)
    {
        if(communicationMessage.getId() == null)
        {
            return (bw.org.bocra.portal.message.CommunicationMessage)this.create(TRANSFORM_NONE,communicationMessage);
        }
        this.update(communicationMessage);
        return communicationMessage;
    }

    // spring-hibernate-dao-base merge-point
}
