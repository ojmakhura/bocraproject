// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, Injector } from '@angular/core';
import { SearchComplaintsComponent, SearchComplaintsSearchForm } from '@app/view/complaint/search-complaints.component';
import { ComplaintState } from '@app/store/complaint/complaint.state';
import * as ComplaintSelectors from '@app/store/complaint/complaint.selectors';
import * as ComplaintActions from '@app/store/complaint/complaint.actions';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { KeycloakService } from 'keycloak-angular';

@Component({
  selector: 'app-search-complaints',
  templateUrl: './search-complaints.component.html',
  styleUrls: ['./search-complaints.component.scss'],
})
export class SearchComplaintsComponentImpl extends SearchComplaintsComponent {
  loggedIn!: boolean;
  constructor(private injector: Injector, public override keycloakService: KeycloakService) {
    super(injector, keycloakService);
  }
  override afterOnInit(): void {}

  doNgOnDestroy(): void {}

  /**
   * This method may be overwritten
   */
  override beforeSearchComplaintsSearch(form: SearchComplaintsSearchForm): void {
    this.isLoggedIn.subscribe((loggedin) => {
      if (loggedin) {
        this.store.dispatch(
          ComplaintActions.search({
            criteria: form.loggedInSearch,
            loading: true,
            loaderMessage: 'Searching access points ...',
          })
        );
      } else {
        if (this.criteriaControl.valid) {
          this.store.dispatch(
            ComplaintActions.findByComplaintId({
              complaintId: form.criteria,
              loading: true,
              loaderMessage: 'Searching access points ...',
            })
          );
        } else {
          if (this?.criteriaControl?.hasError('required')) {
            this.store.dispatch(
              ComplaintActions.complaintFailure({
                messages: ['Complaint ID is required'],
              })
            );
          }
        }
      }
    });
  }

  override searchComplaintsAnalyse() {
    this.router.navigate([`/complaint/complaints-analysis`]);
  }
}
