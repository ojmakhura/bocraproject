// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, Injector } from '@angular/core';
import {
  SearchComplaintTypesComponent,
  SearchComplaintTypesSearchForm,
  SearchComplaintTypesVarsForm,
} from '@app/view/complaint/type/search-complaint-types.component';
import { ComplaintTypeState } from '@app/store/complaint/type/complaint-type.state';
import * as ComplaintTypeSelectors from '@app/store/complaint/type/complaint-type.selectors';
import * as ComplaintTypeActions from '@app/store/complaint/type/complaint-type.actions';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { FormGroup } from '@angular/forms';

@Component({
  selector: 'app-search-complaint-types',
  templateUrl: './search-complaint-types.component.html',
  styleUrls: ['./search-complaint-types.component.scss'],
})
export class SearchComplaintTypesComponentImpl extends SearchComplaintTypesComponent {
  constructor(private injector: Injector) {
    super(injector);
  }

  doNgOnDestroy(): void {}

  override beforeSearchComplaintTypesSearch(form: SearchComplaintTypesSearchForm): void {
    if(form.criteria){
      this.store.dispatch(
        ComplaintTypeActions.search({
          criteria: form.criteria,
          loading: true,
          loaderMessage: 'Searching complaint types ...',
        })
      );
    }else {
      this.store.dispatch(
        ComplaintTypeActions.getAll({
          loading: true,
          loaderMessage: 'Searching complaint types ...'
        })
      )
    }
  }

  override newForm(searchComplaintTypesVarsForm$: SearchComplaintTypesVarsForm): FormGroup {
    return this.formBuilder.group({
        criteria: [{value: searchComplaintTypesVarsForm$?.criteria, disabled: false}],
        complaintTypes: this.formBuilder.array([
            this.formBuilder.group({
                id: [''],
                code: [''],
                typeName: [''],
            })
        ]),
    });
}
}
