// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, Injector } from '@angular/core';
import { days, months } from '@app/period-items';
import { EditPeriodConfigComponent } from '@app/view/period/config/edit-period-config.component';
import { EditPeriodConfigSaveForm } from '@app/view/period/config/edit-period-config.component';
import { EditPeriodConfigSearchForm } from '@app/view/period/config/edit-period-config.component';
import { EditPeriodConfigDeleteForm } from '@app/view/period/config/edit-period-config.component';
import { EditPeriodConfigVarsForm } from '@app/view/period/config/edit-period-config.component';
import * as PeriodConfigActions from '@app/store/period/config/period-config.actions';
import * as PeriodConfigSelectors from '@app/store/period/config/period-config.selectors';
import { KeycloakService } from 'keycloak-angular';

@Component({
  selector: 'app-edit-period-config',
  templateUrl: './edit-period-config.component.html',
  styleUrls: ['./edit-period-config.component.scss']
})
export class EditPeriodConfigComponentImpl extends EditPeriodConfigComponent {

    protected keycloakService: KeycloakService;

    constructor(private injector: Injector) {
        super(injector);
        this.keycloakService = injector.get(KeycloakService);
    }

    override beforeOnInit(form: EditPeriodConfigVarsForm){
      this.periodConfigFinalDayBackingList = days;
      this.periodConfigStartDayBackingList = days;
      this.periodConfigStartMonthBackingList = months;

      return form;
    }
	
    override doNgAfterViewInit() {
      if (this.useCaseScope.pageVariables['id']) {
        this.store.dispatch(PeriodConfigActions.findById({
          id: this.useCaseScope.pageVariables['id'],
          loading: true
        }));
      }
  
      this.periodConfig$.subscribe((periodConfig) => {
      });
    }

    override doNgOnDestroy(){}

    /**
     * This method may be overwritten
     */
    override beforeEditPeriodConfigSave(form: EditPeriodConfigSaveForm): void {
      if(this.periodConfigControl.valid) {
        if(form.periodConfig.id) {
          form.periodConfig.updatedBy = this.keycloakService.getUsername();
          form.periodConfig.updatedDate = new Date();
        } else {
  
          form.periodConfig.createdBy = this.keycloakService.getUsername();
          form.periodConfig.createdDate = new Date();
        }
        this.store.dispatch(PeriodConfigActions.save({
          periodConfig: form.periodConfig,
          loading: true
        }));
      }

    }    
}