// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, Injector } from '@angular/core';
import { MatRadioChange } from '@angular/material/radio';
import { EditPeriodComponent } from '@app/view/period/edit-period.component';
import { EditPeriodSaveForm } from '@app/view/period/edit-period.component';
import { EditPeriodSearchForm } from '@app/view/period/edit-period.component';
import { EditPeriodDeleteForm } from '@app/view/period/edit-period.component';
import { EditPeriodVarsForm } from '@app/view/period/edit-period.component';
import { PeriodVO } from '@app/model/bw/org/bocra/portal/period/period-vo';
import { KeycloakService } from 'keycloak-angular';
import * as PeriodActions from '@app/store/period/period.actions';

@Component({
  selector: 'app-edit-period',
  templateUrl: './edit-period.component.html',
  styleUrls: ['./edit-period.component.scss']
})
export class EditPeriodComponentImpl extends EditPeriodComponent {

    protected keycloakService: KeycloakService;

    constructor(private injector: Injector) {
        super(injector);
        this.keycloakService = injector.get(KeycloakService);
    }

    override beforeOnInit(form: EditPeriodVarsForm): EditPeriodVarsForm {
      return form;
    }

    override doNgOnDestroy(){}

    override doNgAfterViewInit() {
      
      this.route.queryParams.subscribe((queryParams: any) => {
        if (queryParams?.id) {
          this.store.dispatch(
            PeriodActions.findById({
              id: queryParams?.id,
              loading: true,
            })
          );
        }
      });
  
      this.period$.subscribe((period) => {
        this.setEditPeriodFormValue({period: period});
      });
    }

    /**
     * This method may be overwritten
     */
    override beforeEditPeriodSave(form: EditPeriodSaveForm): void {
      if(this.periodControl.valid) {
        if(form.period.id) {
          form.period.updatedBy = this.keycloakService.getUsername();
          form.period.updatedDate = new Date();
        } else {
  
          form.period.createdBy = this.keycloakService.getUsername();
          form.period.createdDate = new Date();
        }
        this.store.dispatch(PeriodActions.save({
          period: form.period,
          loading: true
        }));
      }

    }
}