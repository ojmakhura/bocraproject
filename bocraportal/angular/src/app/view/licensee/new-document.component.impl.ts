// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, Inject, Injector } from '@angular/core';
import { NewDocumentComponent, NewDocumentVarsForm } from '@app/view/licensee/new-document.component';
import * as LicenseeSelectors from '@app/store/licensee/licensee.selectors';
import * as LicenseeActions from '@app/store/licensee/licensee.actions';
import * as DocumentTypeSelectors from '@app/store/document/type/document-type.selectors';
import * as DocumentTypeActions from '@app/store/document/type/document-type.actions';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { select } from '@ngrx/store';
import { LicenseeCriteria } from '@app/model/bw/org/bocra/portal/licensee/licensee-criteria';

@Component({
  selector: 'app-new-document',
  templateUrl: './new-document.component.html',
  styleUrls: ['./new-document.component.scss']
})
export class NewDocumentComponentImpl extends NewDocumentComponent {

  currentFile?: File = undefined;

  constructor(@Inject(MAT_DIALOG_DATA) data: any, private injector: Injector) {
    super(data, injector);
    this.documentLicensees$ = this.store.pipe(select(LicenseeSelectors.selectLicensees));
    this.documentDocumentTypes$ = this.store.pipe(select(DocumentTypeSelectors.selectDocumentTypes));
  }

  override beforeOnInit(form: NewDocumentVarsForm): NewDocumentVarsForm {
    return form;
  }

  override doNgOnDestroy() { }

  override documentLicenseeSearch(): void {
    let criteria: LicenseeCriteria = new LicenseeCriteria();
    criteria.licenseeName = this.documentLicenseeSearchField.value;
    criteria.uin = this.documentLicenseeSearchField.value;
    this.store.dispatch(
      LicenseeActions.search({
        criteria: criteria,
        loading: true,
      })
    );
  }

  override documentDocumentTypeSearch(): void {
      
    this.store.dispatch(
      DocumentTypeActions.search({
        criteria: this.documentDocumentTypeSearchField.value,
        loading: true,
      })
    );
  }

  onFileSelected(event: any) {
    if (event) {
      this.currentFile = event.target.files[0];
      this.documentDocumentNameControl.patchValue(this.currentFile?.name)
    }
  }

  override handleDialogDone(data: any): any {
    if(data.document) {
      data.document.file = this.currentFile;
    }
    return data;
  }
}