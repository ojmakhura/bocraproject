// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, Injector } from '@angular/core';
import { EditDocumentTypeComponent } from '@app/view/document/type/edit-document-type.component';
import { EditDocumentTypeSaveForm } from '@app/view/document/type/edit-document-type.component';
import { EditDocumentTypeDeleteForm } from '@app/view/document/type/edit-document-type.component';
import { EditDocumentTypeSearchForm } from '@app/view/document/type/edit-document-type.component';
import { EditDocumentTypeVarsForm } from '@app/view/document/type/edit-document-type.component';
import { DocumentTypeState } from '@app/store/document/type/document-type.state';
import * as DocumentTypeSelectors from '@app/store/document/type/document-type.selectors';
import * as DocumentTypeActions from '@app/store/document/type/document-type.actions';
import { KeycloakService } from 'keycloak-angular';

@Component({
  selector: 'app-edit-document-type',
  templateUrl: './edit-document-type.component.html',
  styleUrls: ['./edit-document-type.component.scss']
})
export class EditDocumentTypeComponentImpl extends EditDocumentTypeComponent {

    protected keycloakService: KeycloakService;
    constructor(private injector: Injector) {
        super(injector);
        this.keycloakService = injector.get(KeycloakService);
    }

    beforeOnInit(){     
    }
	
    afterOnInit() {
      if (this.useCaseScope.pageVariables['id']) {
        this.store.dispatch(DocumentTypeActions.findById({
          id: this.useCaseScope.pageVariables['id'],
          loading: true
        }));
      }
  
      this.documentType$.subscribe((documentType) => {
        this.setEditDocumentTypeSaveForm({ documentType: documentType } as EditDocumentTypeSaveForm);
      });
    }

    doNgAfterViewInit() {
    }

    doNgOnDestroy(){}

    handleFormChanges(change: any) {
    }

    /**
     * This method may be overwritten
     */
    afterSetEditDocumentTypeVarsForm(form: EditDocumentTypeVarsForm): void {

    }

    /**
     * This method may be overwritten
     */
    afterSetEditDocumentTypeSaveForm(form: EditDocumentTypeSaveForm): void {

    }

    /**
     * This method may be overwritten
     */
    beforeEditDocumentTypeSave(form: EditDocumentTypeSaveForm): void {
      if(form.documentType?.id) {

        form.documentType.updatedBy = this.keycloakService.getUsername();
        form.documentType.updatedDate = new Date();
      } else {
        form.documentType.createdBy = this.keycloakService.getUsername();
        form.documentType.createdDate = new Date();
      }
      
      this.store.dispatch(DocumentTypeActions.save({
        documentType: form.documentType,
        loading: false
      }));
    }

    /**
     * This method may be overwritten
     */
    afterEditDocumentTypeSave(form: EditDocumentTypeSaveForm): void {

    }
    
    /**
     * This method may be overwritten
     */
    afterSetEditDocumentTypeDeleteForm(form: EditDocumentTypeDeleteForm): void {

    }

    /**
     * This method may be overwritten
     */
    beforeEditDocumentTypeDelete(form: EditDocumentTypeDeleteForm): void {

    }

    /**
     * This method may be overwritten
     */
    afterEditDocumentTypeDelete(form: EditDocumentTypeDeleteForm): void {

    }
    
    /**
     * This method may be overwritten
     */
    afterSetEditDocumentTypeSearchForm(form: EditDocumentTypeSearchForm): void {

    }

    /**
     * This method may be overwritten
     */
    beforeEditDocumentTypeSearch(form: EditDocumentTypeSearchForm): void {

    }

    /**
     * This method may be overwritten
     */
    afterEditDocumentTypeSearch(form: EditDocumentTypeSearchForm): void {

    }
    
}