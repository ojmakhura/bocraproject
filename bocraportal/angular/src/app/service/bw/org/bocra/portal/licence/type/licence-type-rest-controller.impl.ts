// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { HttpClient} from '@angular/common/http';
import { Observable } from 'rxjs';
import { LicenceTypeRestController } from '@app/service/bw/org/bocra/portal/licence/type/licence-type-rest-controller';
import { LicenceTypeVO } from '@app/model/bw/org/bocra/portal/licence/type/licence-type-vo';
import { LicenceTypeCriteria } from '@app/model/bw/org/bocra/portal/licence/type/licence-type-criteria';

@Injectable()
export class LicenceTypeRestControllerImpl extends LicenceTypeRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public findById(id: number): Observable<LicenceTypeVO> {

        return this.http.get<LicenceTypeVO>(this.path + `/id/${id}`);

    }

    public getAll(): Observable<LicenceTypeVO[]> {

        return this.http.get<LicenceTypeVO[]>(this.path + `/all`);

    }

    public remove(id: number): Observable<boolean> {

        return this.http.delete<boolean>(this.path + `/id/${id}`);

    }

    public save(LicenceTypeVO: LicenceTypeVO): Observable<LicenceTypeVO> {

        return this.http.post<LicenceTypeVO>(this.path, LicenceTypeVO);

    }

    public search(criteria: LicenceTypeCriteria): Observable<LicenceTypeVO[]> {
        console.log(criteria);
        
        return this.http.post<LicenceTypeVO[]>(this.path + `/search`, criteria);

    }

    public getAllPaged(pageNumber: number, pageSize: number): Observable<LicenceTypeVO[]> {
      return this.http.get<LicenceTypeVO[]>(this.path + `/all/pageNumber/${pageNumber}/pageSize/${pageSize}`);
    }

}