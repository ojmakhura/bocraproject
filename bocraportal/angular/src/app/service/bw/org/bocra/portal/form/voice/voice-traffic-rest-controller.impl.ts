// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { HttpClient} from '@angular/common/http';
import { Observable } from 'rxjs';
import { VoiceTrafficRestController } from '@app/service/bw/org/bocra/portal/form/voice/voice-traffic-rest-controller';
import { VoiceTrafficVO } from '@app/model/bw/org/bocra/portal/form/voice/voice-traffic-vo';
import { FormCriteria } from '@app/model/bw/org/bocra/portal/form/form-criteria';

@Injectable()
export class VoiceTrafficRestControllerImpl extends VoiceTrafficRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public findById(id: number): Observable<VoiceTrafficVO> {

        return this.http.get<VoiceTrafficVO>(this.path + `/id/${id}`);

    }

    public getAll(): Observable<VoiceTrafficVO[]> {

        return this.http.get<VoiceTrafficVO[]>(this.path + `/all`);

    }

    public getAllPaged(pageNumber: number, pageSize: number): Observable<VoiceTrafficVO[]> {

        return this.http.get<VoiceTrafficVO[]>(this.path + `/all/pageNumber/${pageNumber}/pageSize/${pageSize}`);

    }

    public remove(id: number): Observable<boolean> {

        return this.http.delete<boolean>(this.path + `/id/${id}`);

    }

    public save(voiceTrafficVO: VoiceTrafficVO): Observable<VoiceTrafficVO> {

        return this.http.post<VoiceTrafficVO>(this.path, voiceTrafficVO);

    }

    public search(searchCriteria: FormCriteria): Observable<VoiceTrafficVO[]> {

        return this.http.post<VoiceTrafficVO[]>(this.path + `/search`, searchCriteria);

    }

}