// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { SectorRestController } from '@app/service/bw/org/bocra/portal/sector/sector-rest-controller';
import { SectorVO } from '@app/model/bw/org/bocra/portal/sector/sector-vo';
import { LicenseeSectorVO } from '@app/model/bw/org/bocra/portal/licensee/sector/licensee-sector-vo';

@Injectable()
export class SectorRestControllerImpl extends SectorRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public override addLicensee(sectorId: number | any , licenseeId: number | any ): Observable<LicenseeSectorVO | any> {

        return this.http.get<LicenseeSectorVO | any>(this.path + `/${sectorId}/add/licensee/${licenseeId}`);

    }

    public override findById(id: number | any ): Observable<SectorVO | any> {

        return this.http.get<SectorVO | any>(this.path + `/${id}`);

    }

    public override getAll(): Observable<SectorVO[] | any[]> {

        return this.http.get<SectorVO[] | any[]>(this.path + `/all`);

    }

    public override getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<SectorVO[] | any[]> {

        return this.http.get<SectorVO[] | any[]>(this.path + `/page/${pageNumber}/size/${pageSize}`);

    }

    public override remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public override save(sector: SectorVO | any ): Observable<SectorVO | any> {

        return this.http.post<SectorVO | any>(this.path, sector);

    }

    public override search(criteria: string | any ): Observable<SectorVO[] | any[]> {

        return this.http.post<SectorVO[] | any[]>(this.path + `/search`, criteria);

    }

}