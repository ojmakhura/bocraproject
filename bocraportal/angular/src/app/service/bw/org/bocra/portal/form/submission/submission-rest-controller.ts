// Generated by andromda-angular cartridge (service\service.ts.vsl) DO NOT EDIT






// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { DataFieldVO } from '@app/model/bw/org/bocra/portal/form/submission/data/data-field-vo';
import { FormSubmissionCriteria } from '@app/model/bw/org/bocra/portal/form/submission/form-submission-criteria';
import { FormSubmissionVO } from '@app/model/bw/org/bocra/portal/form/submission/form-submission-vo';
import { HttpClient } from '@angular/common/http';

@Injectable({
  providedIn: 'root'
})
export class SubmissionRestController {
    protected path = 'form/submission';


    constructor(private http: HttpClient) {
    }

    public addDataField(dataField: DataFieldVO | any ): Observable<DataFieldVO | any> {

        return this.http.post<DataFieldVO | any>(this.path + `/field`, dataField);

    }

    public addDataFields(dataFields: DataFieldVO | any ): Observable<DataFieldVO[] | any[]> {

        return this.http.post<DataFieldVO[] | any[]>(this.path + `/fields`, dataFields);

    }

    public deleteDataField(id: number | any ): Observable<Boolean | any> {

        return this.http.delete<Boolean | any>(this.path + `/field`);

    }

    public findById(id: number | any ): Observable<FormSubmissionVO | any> {

        return this.http.get<FormSubmissionVO | any>(this.path + `/${id}`);

    }

    public getAll(): Observable<FormSubmissionVO[] | any[]> {

        return this.http.get<FormSubmissionVO[] | any[]>(this.path + `/all`);

    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<FormSubmissionVO[] | any[]> {

        return this.http.get<FormSubmissionVO[] | any[]>(this.path + `/page/${pageNumber}/size/${pageSize}`);

    }

    public remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public save(formSubmissionVO: FormSubmissionVO | any ): Observable<FormSubmissionVO | any> {

        return this.http.post<FormSubmissionVO | any>(this.path, formSubmissionVO);

    }

    public search(criteria: FormSubmissionCriteria | any ): Observable<FormSubmissionVO[] | any[]> {

        return this.http.post<FormSubmissionVO[] | any[]>(this.path + `/search`, criteria);

    }

}
