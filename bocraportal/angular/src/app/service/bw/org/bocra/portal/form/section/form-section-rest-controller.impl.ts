// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { HttpClient} from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormSectionRestController } from '@app/service/bw/org/bocra/portal/form/section/form-section-rest-controller';
import { FormSectionVO } from '@app/model/bw/org/bocra/portal/form/section/form-section-vo';
import { FormVO } from '@app/model/bw/org/bocra/portal/form/form-vo';

@Injectable()
export class FormSectionRestControllerImpl extends FormSectionRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public findById(id: number | any ): Observable<FormVO | any> {

        return this.http.get<FormVO | any>(this.path + `//id/${id}`);

    }

    public getAll(): Observable<FormSectionVO[] | any> {

        return this.http.get<FormSectionVO[] | any>(this.path + `/all`);

    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<FormSectionVO[] | any> {

        return this.http.get<FormSectionVO[] | any>(this.path + `/all/pageNumber/${pageNumber}/pageSize/${pageSize}`);

    }

    public remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `//id/${id}`);

    }

    public save(formSection: FormSectionVO | any ): Observable<FormSectionVO | any> {

        return this.http.post<FormSectionVO | any>(this.path + `/`, formSection);

    }

    public search(criteria: string | any ): Observable<FormSectionVO[] | any> {

        return this.http.post<FormSectionVO[] | any>(this.path + `/search`, criteria);

    }

}