// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { HttpClient} from '@angular/common/http';
import { Observable } from 'rxjs';
import { FormRestController } from '@app/service/bw/org/bocra/portal/form/form-rest-controller';
import { FormVO } from '@app/model/bw/org/bocra/portal/form/form-vo';
import { FormCriteria } from '@app/model/bw/org/bocra/portal/form/form-criteria';

@Injectable()
export class FormRestControllerImpl extends FormRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public findById(id: number): Observable<FormVO> {

        return this.http.get<FormVO>(this.path + `/id/${id}`);

    }

    public getAll(): Observable<FormVO[]> {

        return this.http.get<FormVO[]>(this.path + `/all`);

    }

    public getAllPaged(pageNumber: number, pageSize: number): Observable<FormVO[]> {

        return this.http.get<FormVO[]>(this.path + `/all/pageNumber/${pageNumber}/pageSize/${pageSize}`);

    }

    public remove(id: number): Observable<boolean> {

        return this.http.delete<boolean>(this.path + `/id/${id}`);

    }

    public save(formVO: FormVO): Observable<FormVO> {
        let tmp: FormVO = new FormVO;
        tmp.createdBy = formVO.createdBy;
        tmp.createdDate = formVO.createdBy;
        tmp.id = formVO.id;
        tmp.roles = formVO.roles;
        tmp.type = formVO.type;
        tmp.updatedBy = formVO.updatedBy;
        tmp.updatedDate = formVO.updatedDate;
        tmp.url = formVO.url;
    
        if(formVO.id) {
          tmp.updatedBy = this.keycloakService.getUsername();
          tmp.updatedDate = new Date();
        } else {
          tmp.createdBy = this.keycloakService.getUsername();
          tmp.createdDate = new Date();
        }
        return this.http.post<FormVO>(this.path, tmp);

    }

    public search(criteria: FormCriteria): Observable<FormVO[]> {

        return this.http.post<FormVO[]>(this.path + `/search`, criteria);

    }

}