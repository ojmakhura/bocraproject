// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { LicenseeFormVO } from '@app/model/bw/org/bocra/portal/licensee/form/licensee-form-vo';
import { LicenseeShareholderVO } from '@app/model/bw/org/bocra/portal/licensee/shares/licensee-shareholder-vo';
import { HttpClient } from '@angular/common/http';

@Injectable({
  providedIn: 'root'
})
export class LicenseeShareholderRestController {
    protected path = '/licensee/shareholder';


    constructor(private http: HttpClient) {
    }

    public create(licenseeId: number | any , shareholderId: number | any , numberOfShares: number | any): Observable<LicenseeShareholderVO | any> {

        return this.http.post<LicenseeShareholderVO | any>(this.path, {licenseeId: licenseeId, shareholderId: shareholderId, numberOfShares: numberOfShares});

    }

    public findByLicensee(licenseeId: number | any ): Observable<LicenseeShareholderVO[] | any[]> {

        return this.http.get<LicenseeShareholderVO[] | any[]>(this.path + `/${licenseeId}`);

    }

    public findByShareholder(shareholderId: number | any ): Observable<LicenseeShareholderVO[] | any[]> {

        return this.http.get<LicenseeShareholderVO[] | any[]>(this.path + `/{shareholderId}/shareholderId/${shareholderId}`);

    }

    public findShareholderById(id: number | any ): Observable<LicenseeShareholderVO | any> {

        return this.http.get<LicenseeShareholderVO | any>(this.path + `/${id}`);

    }

    public getAllShareholders(): Observable<LicenseeShareholderVO[] | any[]> {

        return this.http.get<LicenseeShareholderVO[] | any[]>(this.path + `/form/all`);

    }

    public removeShareholder(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public updateLicensee(id: number | any , licenseeId: number | any ): Observable<LicenseeFormVO | any> {

        return this.http.patch<LicenseeFormVO | any>(this.path + `/${id}/${licenseeId}`, {id: id, licenseeId: licenseeId});

    }

    public updateShareholder(id: number | any , shareholderId: number | any ): Observable<LicenseeShareholderVO | any> {

        return this.http.patch<LicenseeShareholderVO | any>(this.path + `/${id}/${shareholderId}`, {id: id, shareholderId: shareholderId});

    }

}
