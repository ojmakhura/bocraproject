// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { LicenceRestController } from '@app/service/bw/org/bocra/portal/licence/licence-rest-controller';
import { LicenceCriteria } from '@app/model/bw/org/bocra/portal/licence/licence-criteria';
import { LicenceVO } from '@app/model/bw/org/bocra/portal/licence/licence-vo';
import { DocumentVO } from '@app/model/bw/org/bocra/portal/document/document-vo';

@Injectable()
export class LicenceRestControllerImpl extends LicenceRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public override addDocument(id: number | any , documentTypeId: number | any , file: File | any ): Observable<DocumentVO | any> {

        return this.http.post<DocumentVO | any>(this.path + `/${id}/document`, {documentTypeId: documentTypeId, file: file});

    }

    public override findById(id: number | any ): Observable<LicenceVO | any> {

        return this.http.get<LicenceVO | any>(this.path + `/${id}`);

    }

    public override getAll(): Observable<LicenceVO[] | any[]> {

        return this.http.get<LicenceVO[] | any[]>(this.path + `/all`);

    }

    public override getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<LicenceVO[] | any[]> {

        return this.http.get<LicenceVO[] | any[]>(this.path + `/page/${pageNumber}/size/${pageSize}`);

    }

    public override remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public override save(licence: LicenceVO | any ): Observable<LicenceVO | any> {

        return this.http.post<LicenceVO | any>(this.path, licence);

    }

    public override search(criteria: LicenceCriteria | any ): Observable<LicenceVO[] | any[]> {

        return this.http.post<LicenceVO[] | any[]>(this.path + `/search`, criteria);

    }

}