// Generated by andromda-angular cartridge (service\service.ts.vsl) DO NOT EDIT






// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { FormActivationCriteria } from '@app/model/bw/org/bocra/portal/form/activation/form-activation-criteria';
import { FormActivationVO } from '@app/model/bw/org/bocra/portal/form/activation/form-activation-vo';
import { HttpClient } from '@angular/common/http';

@Injectable({
  providedIn: 'root'
})
export class FormActivationRestController {
    protected path = '/form/activation';


    constructor(private http: HttpClient) {
    }

    public findById(id: number | any ): Observable<FormActivationVO | any> {

        return this.http.get<FormActivationVO | any>(this.path + `/${id}`);

    }

    public getAll(): Observable<FormActivationVO[] | any[]> {

        return this.http.get<FormActivationVO[] | any[]>(this.path + `/all`);

    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<FormActivationVO[] | any[]> {

        return this.http.get<FormActivationVO[] | any[]>(this.path + `/page/${pageNumber}/size/${pageSize}`);

    }

    public remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public save(formActivation: FormActivationVO | any ): Observable<FormActivationVO | any> {

        return this.http.post<FormActivationVO | any>(this.path, formActivation);

    }

    public search(criteria: FormActivationCriteria | any ): Observable<FormActivationVO[] | any[]> {

        return this.http.post<FormActivationVO[] | any[]>(this.path + `/search`, criteria);

    }

}
