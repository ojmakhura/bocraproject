// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { FormSubmissionVO } from '@app/model/bw/org/bocra/portal/form/submission/form-submission-vo';
import { FormActivationCriteria } from '@app/model/bw/org/bocra/portal/form/activation/form-activation-criteria';
import { FormActivationVO } from '@app/model/bw/org/bocra/portal/form/activation/form-activation-vo';
import { HttpClient } from '@angular/common/http';
import { DataPage } from '@app/model/bw/org/bocra/portal/data-page';

@Injectable({
  providedIn: 'root',
})
export class FormActivationRestController {
  protected path = '/form/activation';

  constructor(private http: HttpClient) {}

  public activateDueForms(): Observable<FormActivationVO[] | any[]> {
    return this.http.get<FormActivationVO[] | any[]>(`${this.path}/activate`);
  }

  public createMissingSubmissions(id: number | any): Observable<FormSubmissionVO[] | any[]> {
    return this.http.get<FormSubmissionVO[] | any[]>(`${this.path}/submission/missing?id=${id}`, {});
  }

  public findById(id: number | any): Observable<FormActivationVO | any> {
    return this.http.get<FormActivationVO | any>(`${this.path}/${id}`, {});
  }

  public getAll(): Observable<FormActivationVO[] | any[]> {
    return this.http.get<FormActivationVO[] | any[]>(`${this.path}/all`);
  }

  public getAllPaged(pageNumber: number | any, pageSize: number | any): Observable<FormActivationVO[] | any[]> {
    return this.http.get<FormActivationVO[] | any[]>(`${this.path}/page/${pageNumber}/size/${pageSize}`, {});
  }

  public recreateActivationSubmission(id: number | any): Observable<FormActivationVO | any> {
    return this.http.get<FormActivationVO | any>(`${this.path}/submissions/recreate/id/${id}`, {});
  }

  public remove(id: number | any): Observable<boolean | any> {
    return this.http.delete<boolean | any>(`${this.path}/${id}`, {});
  }

  public save(formActivation: FormActivationVO | any): Observable<FormActivationVO | any> {
    return this.http.post<FormActivationVO | any>(`${this.path}`, formActivation);
  }

  public search(criteria: FormActivationCriteria | any): Observable<FormActivationVO[] | any[]> {
    return this.http.post<FormActivationVO[] | any[]>(`${this.path}/search`, criteria || {});
  }
  
  pagedSearch(pageNumber: any, pageSize: any, criteria: any): Observable<DataPage | any>  {
    return this.http.post<DataPage | any>(this.path + `/search/page/${pageNumber}/size/${pageSize}`, criteria || {});
  }

  activateDueFormsForDate(activationDate: Date, periodConfigId: number, sendEmail: boolean): Observable<FormActivationVO[] | any[]> {
    return this.http.get<FormActivationVO[] | any[]>(`${this.path}/activate/for?activationDate=${activationDate}&periodConfigId=${periodConfigId ? periodConfigId : -1}&sendEmail=${sendEmail}`);  
  }
}
