// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { PeriodConfigRestController } from '@app/service/bw/org/bocra/portal/period/config/period-config-rest-controller';
import { PeriodVO } from '@app/model/bw/org/bocra/portal/period/period-vo';
import { PeriodConfigCriteria } from '@app/model/bw/org/bocra/portal/period/config/period-config-criteria';
import { PeriodConfigVO } from '@app/model/bw/org/bocra/portal/period/config/period-config-vo';

@Injectable()
export class PeriodConfigRestControllerImpl extends PeriodConfigRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public findById(id: number): Observable<PeriodConfigVO> {

        return this.http.post<PeriodConfigVO>(this.path + `/id/${id}`, id);

    }

    public getAll(): Observable<PeriodConfigVO[]> {

        return this.http.post<PeriodConfigVO[]>(this.path + `/all`);

    }

    public getAllPaged(pageNumber: number, pageSize: number): Observable<PeriodConfigVO[]> {

        return this.http.post<PeriodConfigVO[]>(this.path + `/all/pageNumber/${pageNumber}/pageSize/${pageSize}`, {pageNumber: pageNumber, pageSize: pageSize});

    }

    public remove(id: number): Observable<boolean> {

        return this.http.post<boolean>(this.path + `/id/${id}`, id);

    }

    public save(periodVO: PeriodVO): Observable<PeriodConfigVO> {

        return this.http.post<PeriodConfigVO>(this.path, periodVO);

    }

    public search(searchCriteria: PeriodConfigCriteria): Observable<PeriodConfigVO[]> {

        return this.http.post<PeriodConfigVO[]>(this.path + `/search`, searchCriteria);

    }

}