// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { PeriodConfigRestController } from '@app/service/bw/org/bocra/portal/period/config/period-config-rest-controller';
import { PeriodConfigVO } from '@app/model/bw/org/bocra/portal/period/config/period-config-vo';
import { PeriodConfigCriteria } from '@app/model/bw/org/bocra/portal/period/config/period-config-criteria';

@Injectable()
export class PeriodConfigRestControllerImpl extends PeriodConfigRestController {

    constructor(private injector: Injector) {
        super(injector);
    }

    public override findById(id: number | any ): Observable<PeriodConfigVO | any> {

        return this.http.get<PeriodConfigVO | any>(this.path + `/${id}`);

    }

    public override getAll(): Observable<PeriodConfigVO[] | any[]> {

        return this.http.get<PeriodConfigVO[] | any[]>(this.path + `/all`);

    }

    public override getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<PeriodConfigVO[] | any[]> {

        return this.http.get<PeriodConfigVO[] | any[]>(this.path + `/page/${pageNumber}/size/${pageSize}`);

    }

    public override remove(id: number | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public override save(periodConfig: PeriodConfigVO | any ): Observable<PeriodConfigVO | any> {

        return this.http.post<PeriodConfigVO | any>(this.path, periodConfig);

    }

    public override search(criteria: PeriodConfigCriteria | any ): Observable<PeriodConfigVO[] | any[]> {

        return this.http.post<PeriodConfigVO[] | any[]>(this.path + `/search`, criteria);

    }

}