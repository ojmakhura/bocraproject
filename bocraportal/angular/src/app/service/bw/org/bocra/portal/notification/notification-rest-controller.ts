// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { NotificationVO } from '@app/model/bw/org/bocra/portal/notification/notification-vo';
import { NotificationCriteria } from '@app/model/bw/org/bocra/portal/notification/notification-criteria';
import { HttpClient } from '@angular/common/http';

@Injectable({
  providedIn: 'root',
})
export class NotificationRestController {
  protected path = '/notification';

  constructor(private http: HttpClient) {}

  public findById(id: number | any): Observable<NotificationVO | any> {
    return this.http.get<NotificationVO | any>(this.path + `/${id}`);
  }

  public getAll(): Observable<NotificationVO[] | any[]> {
    return this.http.get<NotificationVO[] | any[]>(this.path + `/all`);
  }

  public getAllPaged(pageNumber: number | any, pageSize: number | any): Observable<NotificationVO[] | any[]> {
    return this.http.get<NotificationVO[] | any[]>(this.path + `/page/${pageNumber}/size/${pageSize}`);
  }

  public remove(id: number | any): Observable<boolean | any> {
    return this.http.delete<boolean | any>(this.path + `/${id}`);
  }

  public save(notification: NotificationVO | any): Observable<NotificationVO | any> {
    return this.http.post<NotificationVO | any>(this.path, notification);
  }

  public search(criteria: NotificationCriteria | any): Observable<NotificationVO[] | any[]> {
    return this.http.post<NotificationVO[] | any[]>(this.path + `/search`, criteria || {});
  }
}
