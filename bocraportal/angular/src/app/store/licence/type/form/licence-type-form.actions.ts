// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { LicenceTypeFormVO } from '@model/bw/org/bocra/portal/licence/type/form/licence-type-form-vo';
import { createAction, props } from '@ngrx/store';

export enum LicenceTypeFormActionType {
  FIND_BY_ID = '[Licence Form Form] Find By Id',
  FIND_BY_ID_SUCCESS = '[Licence Form Form] Find By Id Success',
  FIND_BY_LICENCE_TYPE = '[Licence Form Form] Find By Licence Form',
  FIND_BY_LICENCE_TYPE_SUCCESS = '[Licence Form Form] Find By Licence Form Success',
  FIND_BY_FORM = '[Licence Form Form] Find By Form',
  FIND_BY_FORM_SUCCESS = '[Licence Form Form] Find By Form Success',
  CREATE = '[Licence Form Form] Save',
  CREATE_SUCCESS = '[Licence Form Form] Save Success',
  UPDATE_LICENSEE = '[Licence Form Form] Update Licence Form',
  UPDATE_FORM = '[Licence Form Form] Update Form',
  UPDATE_SUCCESS = '[Licence Form Form] Update Success',
  REMOVE = '[Licence Form Form] Remove',
  REMOVE_SUCCESS = '[Licence Form Form] Remove Success',
  GET_ALL = '[Licence Form Form] Get All',
  GET_ALL_SUCCESS = '[Licence Form Form] Get All Success',
  LICENSEE_FORM_RESET = '[Licence Form Form] Licence Form Form Reset',
  LICENSEE_FORM_FAILURE = '[Licence Form Form] Licence Form Form Action Failure',
  LICENSEE_FORM_LOADING = '[Licence Form Form] Licence Form Form Loading',
}

export const findById = createAction(LicenceTypeFormActionType.FIND_BY_ID, props<{ id: number | any; loading: boolean, loaderMesage: string | undefined }>());

export const findByIdSuccess = createAction(
  LicenceTypeFormActionType.FIND_BY_ID_SUCCESS,
  props<{ licenceTypeForm: LicenceTypeFormVO | any; messages: any[]; success: boolean }>()
);

export const findByLicenceType = createAction(
  LicenceTypeFormActionType.FIND_BY_LICENCE_TYPE,
  props<{ licenceTypeId: number | any; loading: boolean, loaderMesage: string | undefined }>()
);

export const findByLicenceTypeSuccess = createAction(
  LicenceTypeFormActionType.FIND_BY_LICENCE_TYPE_SUCCESS,
  props<{ licenceTypeForms: LicenceTypeFormVO[] | any[]; messages: any[]; success: boolean }>()
);

export const findByForm = createAction(
  LicenceTypeFormActionType.FIND_BY_FORM,
  props<{ formId: number | any; loading: boolean, loaderMesage: string | undefined }>()
);

export const findByFormSuccess = createAction(
  LicenceTypeFormActionType.FIND_BY_FORM_SUCCESS,
  props<{ licenceTypeForms: LicenceTypeFormVO[] | any[]; messages: any[]; success: boolean }>()
);

export const create = createAction(
  LicenceTypeFormActionType.CREATE,
  props<{ licenceTypeId: number; formId: number; loading: boolean, loaderMesage: string | undefined }>()
);

export const createSuccess = createAction(
  LicenceTypeFormActionType.CREATE_SUCCESS,
  props<{ licenceTypeForm: LicenceTypeFormVO | any; messages: any[]; success: boolean }>()
);

export const updateLicenceType = createAction(
  LicenceTypeFormActionType.UPDATE_LICENSEE,
  props<{ id: number; licenceTypeId: number; loading: boolean, loaderMesage: string | undefined }>()
);

export const updateForm = createAction(
  LicenceTypeFormActionType.UPDATE_FORM,
  props<{ id: number; formId: number; loading: boolean, loaderMesage: string | undefined }>()
);

export const updateSuccess = createAction(
  LicenceTypeFormActionType.UPDATE_SUCCESS,
  props<{ licenceTypeForm: LicenceTypeFormVO | any; messages: any[]; success: boolean }>()
);

export const remove = createAction(LicenceTypeFormActionType.REMOVE, props<{ id: number | any; loading: boolean, loaderMesage: string | undefined }>());

export const removeSuccess = createAction(
  LicenceTypeFormActionType.REMOVE_SUCCESS,
  props<{ removed: boolean | any; messages: any[]; success: boolean }>()
);

export const getAll = createAction(LicenceTypeFormActionType.GET_ALL, props<{ loading: boolean, loaderMesage: string | undefined }>());

export const getAllSuccess = createAction(
  LicenceTypeFormActionType.GET_ALL_SUCCESS,
  props<{ licenceTypeForms: LicenceTypeFormVO[] | any[]; messages: any[]; success: boolean }>()
);

export const licenceTypeFormReset = createAction(LicenceTypeFormActionType.LICENSEE_FORM_RESET);

export const licenceTypeFormLoading = createAction(
  LicenceTypeFormActionType.LICENSEE_FORM_LOADING,
  props<{ loading: boolean, loaderMesage: string | undefined; success: boolean; messages: any[] }>()
);

export const licenceTypeFormFailure = createAction(LicenceTypeFormActionType.LICENSEE_FORM_FAILURE, props<{ messages: any[] }>());
