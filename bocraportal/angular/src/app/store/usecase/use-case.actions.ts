// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { createAction, props } from '@ngrx/store';
import { AuthorisationCriteria } from '@app/model/bw/org/bocra/portal/auth/authorisation-criteria';
import { AuthorisationVO } from '@app/model/bw/org/bocra/portal/auth/authorisation-vo';

export enum UseCaseScopeActionType {
  SET_PAGE_VARIABLES = '[UseCase] Set Page Variables',
  SET_USECASE_PARAMETERS = '[UseCase] Set Use Case Parameters',
  SET_USECASE_RETURN_VALUES = '[UseCase] Set Use Case Return Values',
  SET_USECASE_IN_DIALOG = '[UseCase] Set Use Case in Dialog',
  RESET_USECASE = '[UseCase] Reset Use Case',
  ACTION_FAILURE = '[UseCase] Action Failure',
}

export const setPageVariables = createAction(UseCaseScopeActionType.SET_PAGE_VARIABLES, props<{ pageVariables: any }>());

export const setUseCaseParameters = createAction(UseCaseScopeActionType.SET_USECASE_PARAMETERS, props<{ useCaseParameters: any }>());

export const setUseCaseReturnValues = createAction(UseCaseScopeActionType.SET_USECASE_RETURN_VALUES, props<{ useCaseReturnValues: any }>());

export const setUseCaseInDialog = createAction(UseCaseScopeActionType.SET_USECASE_IN_DIALOG, props<{ useCaseInDialog: boolean }>());

export const reset = createAction(UseCaseScopeActionType.RESET_USECASE);

export const useCaseActionFailure = createAction(UseCaseScopeActionType.ACTION_FAILURE, props<{ messages: any[] }>());
