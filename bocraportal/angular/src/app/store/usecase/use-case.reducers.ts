// Generated by andromda-angular cartridge (app\usecase\reducer.store.ts.vsl) DO NOT EDIT
import { Action, createFeature, createReducer, on } from '@ngrx/store';
import { AuthorisationCriteria } from '@app/model/bw/org/bocra/portal/auth/authorisation-criteria';
import { AuthorisationVO } from '@app/model/bw/org/bocra/portal/auth/authorisation-vo';
import * as UseCaseActions from './use-case.actions';

export const useCaseKey = 'use-case';

export interface UseCaseScopeState {
  pageVariables: any;
  useCaseParameters: any;
  useCaseReturnValues: any;
  useCaseInDialog: boolean;
  errors: any[];
}

export const initialState: UseCaseScopeState = {
  pageVariables: {},
  useCaseParameters: {},
  useCaseReturnValues: {},
  useCaseInDialog: false,
  errors: [],
};

export const useCaseReducer = createReducer(
  initialState,
  on(UseCaseActions.setPageVariables, (state, action) => ({
    ...state,
    pageVariables: action.pageVariables,
  })),
  on(UseCaseActions.setUseCaseInDialog, (state, action) => ({
    ...state,
    useCaseInDialog: action.useCaseInDialog,
  })),
  on(UseCaseActions.setUseCaseParameters, (state, action) => ({
    ...state,
    useCaseParameters: action.useCaseParameters,
  })),
  on(UseCaseActions.setUseCaseReturnValues, (state, action) => ({
    ...state,
    useCaseReturnValues: action.useCaseReturnValues,
  })),
  on(UseCaseActions.reset, (state) => ({
    ...state,
    pageVariables: {},
    useCaseParameters: {},
    useCaseReturnValues: {},
    useCaseInDialog: false,
    errors: [],
  })),
  on(UseCaseActions.useCaseActionFailure, (state, action) => ({
    ...state,
    errors: action.errors,
  }))
);

export const useCaseFeature = createFeature({
  name: useCaseKey,
  reducer: useCaseReducer,
});
