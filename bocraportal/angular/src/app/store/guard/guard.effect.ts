// Generated by andromda-angular cartridge (app\usecase\effect.store.ts.vsl) DO NOT EDIT
import { Injectable } from '@angular/core';
import { UrlGuardRestControllerImpl } from '@app/service/bw/org/bocra/portal/guard/url-guard-rest-controller.impl';
import { Actions, createEffect, ofType } from '@ngrx/effects';
import { catchError, map, mergeMap } from 'rxjs/operators';
import * as GuardActions from './guard.action';

@Injectable()
export class GuardEffects {
    
  constructor(private actions$: Actions, private guardService: UrlGuardRestControllerImpl) {}

  saveGuard$ = createEffect(() => 
    this.actions$.pipe(
      ofType(GuardActions.saveGuard),
      mergeMap(({guard}) => this.guardService.save(guard).pipe(
        map(guard => GuardActions.saveGuardSuccess({guard})),
        catchError(({error}) => [GuardActions.guardActionFailure(error)])
      ))
    )
  );

  findById$ = createEffect(() => 
    this.actions$.pipe(
      ofType(GuardActions.findById),
      mergeMap(({id}) => this.guardService.findById(id).pipe(
        map(guard => GuardActions.findByIdSuccess({guard})),
        catchError(({error}) => [GuardActions.guardActionFailure(error)])
      ))
    )
  );

  loadAll$ = createEffect(() => 
    this.actions$.pipe(
      ofType(GuardActions.loadAll),
      mergeMap(() => this.guardService.getAll().pipe(
        map(guards => GuardActions.loadAllSuccess({guards})),
        catchError(({error}) => [GuardActions.guardActionFailure(error)])
      ))
    )
  );

  searchGuards$ = createEffect(() => 
    this.actions$.pipe(
      ofType(GuardActions.searchGuards),
      mergeMap(({searchCriteria}) => this.guardService.search(searchCriteria).pipe(
        map(guards => GuardActions.searchGuardsSuccess({guards})),
        catchError(({error}) => [GuardActions.guardActionFailure(error)])
      ))
    )
  );
}
