// Generated by andromda-angular cartridge (app\usecase\effect.store.ts.vsl) DO NOT EDIT
import { Injectable } from '@angular/core';
import { ReportRestController } from '@app/service/bw/org/bocra/portal/report/report-rest-controller';
import { Actions, createEffect, ofType } from '@ngrx/effects';
import { catchError, map, mergeMap } from 'rxjs/operators';
import * as ReportActions from './report.actions';

@Injectable()
export class ReportEffects {
  constructor(private actions$: Actions, private reportRestController: ReportRestController) {}

  createWordReport$ = createEffect(() =>
    this.actions$.pipe(
      ofType(ReportActions.createWordReport),
      mergeMap(({ data }) =>
        this.reportRestController.createWordDocument(data).pipe(
          map((file) =>
            ReportActions.createReportSuccess({
              file,
              messages: ['Report successfully generated.'],
              success: true,
            })
          ),
          catchError(({ error }) => [
            ReportActions.reportFailure({ messages: [error?.error ? error?.error : error] }),
          ])
        )
      )
    )
  );

  createComplaintWordReport$ = createEffect(() =>
    this.actions$.pipe(
      ofType(ReportActions.createComplaintWordReport),
      mergeMap(({ data }) =>
        this.reportRestController.createComplaintReportWordDocument(data).pipe(
          map((file) =>
            ReportActions.createReportSuccess({
              file,
              messages: ['Report successfully generated.'],
              success: true,
            })
          ),
          catchError(({ error }) => [
            ReportActions.reportFailure({ messages: [error?.error ? error?.error : error] }),
          ])
        )
      )
    )
  );
}
