// Generated by andromda-angular cartridge (app\usecase\reducer.store.ts.vsl) DO NOT EDIT
import { Action, createFeature, createReducer, on } from '@ngrx/store';
import * as ReportActions from './report.actions';
import { reportKey, initialState } from './report.state';

export const reportReducer = createReducer(
  initialState,
  on(ReportActions.addElement, (state, action) => ({
    ...state,
    reportElements: [...state.reportElements, action.reportElement],
  })),
  on(ReportActions.setElements, (state, action) => ({
    ...state,
    reportElements: action.reportElements,
  })),
  on(ReportActions.setSubmissions, (state, action) => ({
    ...state,
    formSubmissions: action.formSubmissions,
    loaderMessage: undefined,
    loading: false,
    success: action.success,
    error: false,
    messges: action.messages,
  })),
  on(ReportActions.reportReset, (state) => ({
    ...state,
    reportElements: [],
    loaderMessage: undefined,
    loading: false,
    success: false,
    error: false,
    messges: [],
  })),
  on(ReportActions.reportFailure, (state, action) => ({
    ...state,
    loading: false,
    loaderMessage: undefined,
    success: false,
    error: true,
    messages: action.messages,
  })),
  on(ReportActions.reportLoading, (state, action) => ({
    ...state,
    loaderMessage: undefined,
    loading: action.loading,
    success: false,
  }))
);

export const reportFeature = createFeature({
  name: reportKey,
  reducer: reportReducer,
});
