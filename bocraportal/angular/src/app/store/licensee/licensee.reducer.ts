// Generated by andromda-angular cartridge (app\usecase\reducer.store.ts.vsl) DO NOT EDIT
import { Action, createFeature, createReducer, on } from '@ngrx/store';
import * as LicenseeActions from './licensee.action';
import {licenseeKey, initialState} from './licensee.state';
import { LicenseeCriteria } from '@app/model/bw/org/bocra/portal/licensee/licensee-criteria';
import { LicenseeVO } from '@app/model/bw/org/bocra/portal/licensee/licensee-vo';

export const licenseeReducer = createReducer(
    initialState,
    on(LicenseeActions.findByIdSuccess, (state, action) => ({
        ...state,
        licenseeVO: action.licenseeVO, 
        error: null
    })),
    on(LicenseeActions.saveSuccess, (state, action) => ({
        ...state,
        licenseeVO: action.licenseeVO, 
        error: null
    })),
    on(LicenseeActions.removeSuccess, (state, action) => ({
        ...state, 
        removed: action.removed, 
        error: null
    })),
    on(LicenseeActions.getAllSuccess, (state, action) => ({
        ...state,
        licensees: action.licensees, 
        error:null
    })),
    on(LicenseeActions.searchLicenseesSuccess, (state, action) => ({
        ...state,
        licensees: action.licensees, 
        error: null
    })),
    on(LicenseeActions.getAllPagedSuccess, (state, action) => ({
        ...state,
        licensees: action.licensees, 
        error: null
    })),
    on(LicenseeActions.licenseeReset, (state) => ({
      ...state,
        pageNumber: null, 
        pageSize: null, 
        id: null, 
        searchCriteria: null, 
        licenseeVO: null,
        licensees: [],
        removed: false,
        error: null
    })),
    on(LicenseeActions.licenseeFailure, (state, action) => ({
        ...state,
        error: action.error
    }))
);

export const licenseeFeature = createFeature({
    name: licenseeKey,
    reducer: licenseeReducer
});
