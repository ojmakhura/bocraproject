// Generated by andromda-angular cartridge (app\usecase\reducer.store.ts.vsl) DO NOT EDIT
import { Action, createFeature, createReducer, on } from '@ngrx/store';
import * as LicenseeActions from './licensee.actions';
import {licenseeKey, initialState} from './licensee.state';

export const licenseeReducer = createReducer(
    initialState,
    on(LicenseeActions.findByIdSuccess, (state, action) => ({
        ...state,
        licensee: action.licensee, 
        loading: false,
        success: action.success,
        error: null
    })),
    on(LicenseeActions.saveSuccess, (state, action) => ({
        ...state,
        licensee: action.licensee, 
        loading: false,
        success: action.success,
        error: null
    })),
    on(LicenseeActions.removeSuccess, (state, action) => ({
        ...state,
        removed: action.removed,
        loading: false,
        success: action.success,
        error: null
    })),
    on(LicenseeActions.getAllSuccess, (state, action) => ({
        ...state,
        licensees: action.licensees, 
        loading: false,
        success: action.success,
        error: null
    })),
    on(LicenseeActions.searchSuccess, (state, action) => ({
        ...state,
        licensees: action.licensees, 
        loading: false,
        success: action.success,
        error: null
    })),
    // on(LicenseeActions.getDocumentsSuccess, (state, action) => ({
    //     ...state,
    //     documents: action.documents, 
    //     loading: false,
    //     success: action.success,
    //     error: null
    // })),
    on(LicenseeActions.getAllPagedSuccess, (state, action) => ({
        ...state,
        licensees: action.licensees, 
        loading: false,
        success: action.success,
        error: null
    })),
    on(LicenseeActions.licenseeReset, (state) => ({
      ...state,
        licensees: [], 
        licensee: null, 
        criteria: null, 
        removed: false,
        shareholder: null,
        shareholders: [],
        id: null, 
        loading: false,
        success: false,
        error: null
    })),
    on(LicenseeActions.licenseeFailure, (state, action) => ({
        ...state,
        error: action.error
    }))
);

export const licenseeFeature = createFeature({
    name: licenseeKey,
    reducer: licenseeReducer
});
