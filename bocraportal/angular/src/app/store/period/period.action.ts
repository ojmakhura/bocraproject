// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { createAction, props } from '@ngrx/store';
import { PeriodVO } from '@app/model/bw/org/bocra/portal/period/period-vo';
import { PeriodCriteria } from '@app/model/bw/org/bocra/portal/period/period-criteria';

export enum PeriodActionType {
    FIND_BY_ID = '[Period] Find By Id',
    FIND_BY_ID_SUCCESS = '[Period] Find By Id Success',
    SAVE = '[Period] Save',
    SAVE_SUCCESS = '[Period] Save Success',
    REMOVE = '[Period] Remove',
    REMOVE_SUCCESS = '[Period] Remove Success',
    GET_ALL = '[Period] Get All',
    GET_ALL_SUCCESS = '[Period] Get All Success',
    SEARCH = '[Period] Search',
    SEARCH_SUCCESS = '[Period] Search Success',
    GET_ALL_PAGED = '[Period] Get All Paged',
    GET_ALL_PAGED_SUCCESS = '[Period] Get All Paged Success',
    PERIOD_RESET = '[Period] Period Reset',
    PERIOD_FAILURE = '[Period] Period Action Failure'
}

export const findById = createAction(
    PeriodActionType.FIND_BY_ID,
    props<{ id: number | any  }>()
);

export const findByIdSuccess = createAction(
    PeriodActionType.FIND_BY_ID_SUCCESS,
//    props<{ results: PeriodVO | any }>()
);

export const save = createAction(
    PeriodActionType.SAVE,
    props<{ periodVO: PeriodVO | any  }>()
);

export const saveSuccess = createAction(
    PeriodActionType.SAVE_SUCCESS,
//    props<{ results: PeriodVO | any }>()
);

export const remove = createAction(
    PeriodActionType.REMOVE,
    props<{ id: number | any  }>()
);

export const removeSuccess = createAction(
    PeriodActionType.REMOVE_SUCCESS,
//    props<{ results: boolean | any }>()
);

export const getAll = createAction(
    PeriodActionType.GET_ALL);

export const getAllSuccess = createAction(
    PeriodActionType.GET_ALL_SUCCESS,
//    props<{ results: PeriodVO[] | any }>()
);

export const search = createAction(
    PeriodActionType.SEARCH,
    props<{ searchCriteria: PeriodCriteria | any  }>()
);

export const searchSuccess = createAction(
    PeriodActionType.SEARCH_SUCCESS,
//    props<{ results: PeriodVO[] | any }>()
);

export const getAllPaged = createAction(
    PeriodActionType.GET_ALL_PAGED,
    props<{ pageNumber: number | any , pageSize: number | any  }>()
);

export const getAllPagedSuccess = createAction(
    PeriodActionType.GET_ALL_PAGED_SUCCESS,
//    props<{ results: PeriodVO[] | any }>()
);


export const periodReset = createAction(PeriodActionType.PERIOD_RESET);

export const periodFailure = createAction(
    PeriodActionType.PERIOD_FAILURE,
    props<{ error: any }>()
);
