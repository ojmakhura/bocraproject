// Generated by andromda-angular cartridge (app\usecase\reducer.store.ts.vsl) DO NOT EDIT
import { Action, createFeature, createReducer, on } from '@ngrx/store';
import * as PeriodConfigActions from './period-config.action';
import {periodConfigKey, initialState} from './period-config.state';
import { PeriodConfigVO } from '@app/model/bw/org/bocra/portal/period/config/period-config-vo';
import { PeriodConfigCriteria } from '@app/model/bw/org/bocra/portal/period/config/period-config-criteria';

export const periodConfigReducer = createReducer(
    initialState,
    on(PeriodConfigActions.findByIdSuccess, (state, action) => ({
        ...state,
        periodConfigVO: action.periodConfigVO, 
    })),
    on(PeriodConfigActions.saveSuccess, (state, action) => ({
        ...state,
        periodConfigVO: action.periodConfigVO
    })),
    on(PeriodConfigActions.removeSuccess, (state, action) => ({
        ...state,
        removed: action.removed
    })),
    on(PeriodConfigActions.getAllSuccess, (state, action) => ({
        ...state,
        periodConfigs: action.periodConfigs, 
        error: null
    })),
    on(PeriodConfigActions.searchSuccess, (state, action) => ({
        ...state,
        periodConfigs: action.periodConfigs
    })),
    on(PeriodConfigActions.getAllPagedSuccess, (state, action) => ({
        ...state,
        periodConfigs: action.periodConfigs
    })),
    on(PeriodConfigActions.periodConfigReset, (state) => ({
      ...state,
        periodConfigVO: null, 
        searchCriteria: null, 
        pageNumber: null, 
        pageSize: null, 
        id: null, 
        removed: false,
        error: null
    })),
    on(PeriodConfigActions.periodConfigFailure, (state, action) => ({
        ...state,
        error: action.error
    }))
);

export const periodConfigFeature = createFeature({
    name: periodConfigKey,
    reducer: periodConfigReducer
});
