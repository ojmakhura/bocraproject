// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { PeriodConfigVO } from '@app/model/bw/org/bocra/portal/period/onfig/period-config-vo';
import { createAction, props } from '@ngrx/store';
import { PeriodConfigCriteria } from '@app/model/bw/org/bocra/portal/period/config/period-config-criteria';

export enum PeriodConfigActionType {
    SAVE_PERIOD_CONFIG = '[PeriodConfig] Save Period Config',
    SAVE_PERIOD_CONFIG_SUCCESS = '[PeriodConfig] Save Period Config Success',
    FIND_BY_ID = '[PeriodConfig] Find By Id',
    FIND_BY_ID_SUCCESS = '[PeriodConfig] Find By Id Success',
    LOAD_ALL = '[PeriodConfig] Load All',
    LOAD_ALL_SUCCESS = '[PeriodConfig] Load All Success',
    SEARCH_PERIOD_CONFIGS = '[PeriodConfig] Search Period Configs',
    SEARCH_PERIOD_CONFIGS_SUCCESS = '[PeriodConfig] Search Period Configs Success',
    RESET = '[PeriodConfig] Reset',
    ACTION_FAILURE = '[PeriodConfig] Action Failure'
}


export const savePeriodConfig = createAction(
    PeriodConfigActionType.SAVE_PERIOD_CONFIG,
    props<{ periodConfig: PeriodConfigVO }>()
);

export const savePeriodConfigSuccess = createAction(
    PeriodConfigActionType.SAVE_PERIOD_CONFIG_SUCCESS,
    props<{ periodConfig: any }>()
);

export const findById = createAction(
    PeriodConfigActionType.FIND_BY_ID,
    props<{ id: number }>()
);

export const findByIdSuccess = createAction(
    PeriodConfigActionType.FIND_BY_ID_SUCCESS,
    props<{ periodConfig: PeriodConfigVO }>()
);

export const loadAll = createAction(
    PeriodConfigActionType.LOAD_ALL
);

export const loadAllSuccess = createAction(
    PeriodConfigActionType.LOAD_ALL_SUCCESS,
    props<{ periodConfigs: PeriodConfigVO[] }>()
);

export const searchPeriodConfigs = createAction(
    PeriodConfigActionType.SEARCH_PERIOD_CONFIGS,
    props<{ searchCriteria: PeriodConfigCriteria }>()
);

export const searchPeriodConfigsSuccess = createAction(
    PeriodConfigActionType.SEARCH_PERIOD_CONFIGS_SUCCESS,
    props<{ periodConfigs: PeriodConfigVO[] }>()
);

export const reset = createAction(PeriodConfigActionType.RESET);

export const periodConfigActionFailure = createAction(
    PeriodConfigActionType.ACTION_FAILURE,
    props<{ error: any }>()
);