// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { createAction, props } from '@ngrx/store';
import { LicenseeGroupVO } from '@app/model/bw/org/bocra/portal/group/licensee-group-vo';
import { LicenseeGroupCriteria } from '@app/model/bw/org/bocra/portal/group/licensee-group-criteria';

export enum GroupActionType {
    SAVE_GROUP = '[Group] Save Group',
    SAVE_GROUP_SUCCESS = '[Group] Save Group Success',
    FIND_BY_ID = '[Group] Find By Id',
    FIND_BY_ID_SUCCESS = '[Group] Find By Id Success',
    LOAD_ALL = '[Group] Load All',
    LOAD_ALL_SUCCESS = '[Group] Load All Success',
    SEARCH_GROUPS = '[Group] Search Groups',
    SEARCH_GROUPS_SUCCESS = '[Group] Search Groups Success',
    RESET = '[Group] Reset',
    ACTION_FAILURE = '[Group] Action Failure'
}

export const saveGroup = createAction(
    GroupActionType.SAVE_GROUP,
    props<{ group: LicenseeGroupVO }>()
);

export const saveGroupSuccess = createAction(
    GroupActionType.SAVE_GROUP_SUCCESS,
    props<{ group: any }>()
);

export const findById = createAction(
    GroupActionType.FIND_BY_ID,
    props<{ id: number }>()
);

export const findByIdSuccess = createAction(
    GroupActionType.FIND_BY_ID_SUCCESS,
    props<{ group: LicenseeGroupVO }>()
);

export const loadAll = createAction(
    GroupActionType.LOAD_ALL
);

export const loadAllSuccess = createAction(
    GroupActionType.LOAD_ALL_SUCCESS,
    props<{ groups: LicenseeGroupVO[] }>()
);

export const searchGroups = createAction(
    GroupActionType.SEARCH_GROUPS,
    props<{ searchCriteria: LicenseeGroupCriteria }>()
);

export const searchGroupsSuccess = createAction(
    GroupActionType.SEARCH_GROUPS_SUCCESS,
    props<{ groups: LicenseeGroupVO[] }>()
);

export const reset = createAction(GroupActionType.RESET);

export const groupActionFailure = createAction(
    GroupActionType.ACTION_FAILURE,
    props<{ error: any }>()
);
