// Generated by andromda-angular cartridge (app\usecase\effect.store.ts.vsl) DO NOT EDIT
import { Injectable } from '@angular/core';
import { Actions, createEffect, ofType } from '@ngrx/effects';
import { catchError, map, mergeMap } from 'rxjs/operators';
import * as MenuActions from './menu.actions';
import { KeycloakService } from 'keycloak-angular';
import { AuthorisationRestControllerImpl } from '@app/service/bw/org/bocra/portal/auth/authorisation-rest-controller.impl';
import { AuthorisationCriteria } from '@app/model/bw/org/bocra/portal/auth/authorisation-criteria';
import { AuthorisationType } from '@app/model/bw/org/bocra/portal/auth/authorisation-type';
import * as nav from '@app/shell/navigation';

@Injectable()
export class MenuEffects {
  constructor(private actions$: Actions, private keycloakService: KeycloakService, private authorisationRestController: AuthorisationRestControllerImpl) {}

//   getMenus$ = createEffect(() =>
//   this.actions$.pipe(
//     ofType(MenuActions.getMenus),
//     mergeMap(() => {
//       let criteria: AuthorisationCriteria = new AuthorisationCriteria();
//       criteria.type = AuthorisationType.MENU;
//       criteria.roles = this.keycloakService.getUserRoles();

//       this.authorisationRestController.search(criteria).pipe(
//         map(({ authorisations }) => {
//           nav.menuItems.forEach((value) => {
//             authorisations.find((authorisation) => {
//               if (authorisation.url === value.routerLink) {
//                 MenuActions.addMenu({menu: value})
//               }
//             });
//           });
//         }),
//         catchError(({ errors }) => [MenuActions.authFailure(messages)])
//       )
//     })
//   )
// );

}
