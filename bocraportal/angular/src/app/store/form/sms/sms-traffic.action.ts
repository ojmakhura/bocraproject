// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { createAction, props } from '@ngrx/store';
import { FormCriteria } from '@app/model/bw/org/bocra/portal/form/form-criteria';
import { SMSTrafficVO } from '@app/model/bw/org/bocra/portal/form/sms/sms-traffic-vo';

export enum SMSTrafficActionType {
    SAVE_SMS_TRAFFIC = '[SMSTraffic] Save SMS Traffic',
    SAVE_SMS_TRAFFIC_SUCCESS = '[SMSTraffic] Save SMS Traffic Success',
    FIND_BY_ID = '[SMSTraffic] Find By Id',
    FIND_BY_ID_SUCCESS = '[SMSTraffic] Find By Id Success',
    LOAD_ALL = '[SMSTraffic] Load All',
    LOAD_ALL_SUCCESS = '[SMSTraffic] Load All Success',
    SEARCH_SMS_TRAFFIC = '[SMSTraffic] Search SMS Traffic',
    SEARCH_SMS_TRAFFIC_SUCCESS = '[SMSTraffic] Search SMS Traffic Success',
    RESET = '[SMSTraffic] Reset',
    ACTION_FAILURE = '[SMSTraffic] Action Failure'
}

export const saveSMSTraffic = createAction(
    SMSTrafficActionType.SAVE_SMS_TRAFFIC,
    props<{ sms: SMSTrafficVO }>()
);

export const saveSMSTrafficSuccess = createAction(
    SMSTrafficActionType.SAVE_SMS_TRAFFIC_SUCCESS,
    props<{ sms: any }>()
);

export const findById = createAction(
    SMSTrafficActionType.FIND_BY_ID,
    props<{ id: number }>()
);

export const findByIdSuccess = createAction(
    SMSTrafficActionType.FIND_BY_ID_SUCCESS,
    props<{ sms: SMSTrafficVO }>()
);

export const loadAll = createAction(
    SMSTrafficActionType.LOAD_ALL
);

export const loadAllSuccess = createAction(
    SMSTrafficActionType.LOAD_ALL_SUCCESS,
    props<{ smsTrafics: SMSTrafficVO[] }>()
);

export const searchSMSTraffic = createAction(
    SMSTrafficActionType.SEARCH_SMS_TRAFFIC,
    props<{ searchCriteria: FormCriteria }>()
);

export const searchSMSTrafficsSuccess = createAction(
    SMSTrafficActionType.SEARCH_SMS_TRAFFIC_SUCCESS,
    props<{ smsTrafics: SMSTrafficVO[] }>()
);

export const reset = createAction(SMSTrafficActionType.RESET);

export const smsTrafficActionFailure = createAction(
    SMSTrafficActionType.ACTION_FAILURE,
    props<{ error: any }>()
);