// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { Injectable } from '@angular/core';
import { SMSTrafficRestControllerImpl } from '@app/service/bw/org/bocra/portal/form/sms/smstraffic-rest-controller.impl';
import { Actions, createEffect, ofType } from '@ngrx/effects';
import { catchError, map, mergeMap } from 'rxjs';
import * as SMSTrafficActions from './sms-traffic.action';

@Injectable()
export class SMSTrafficEffects {
  constructor(private actions$: Actions, private smsService: SMSTrafficRestControllerImpl) {}

  saveSim$ = createEffect(() =>
    this.actions$.pipe(
      ofType(SMSTrafficActions.saveSMSTraffic),
      mergeMap(({ sms }) =>
        this.smsService.save(sms).pipe(
          map((sms) => SMSTrafficActions.saveSMSTrafficSuccess({ sms })),
          catchError(({ error }) => [SMSTrafficActions.smsActionFailure(error)])
        )
      )
    )
  );

  findById$ = createEffect(() =>
    this.actions$.pipe(
      ofType(SMSTrafficActions.findById),
      mergeMap(({ id }) =>
        this.smsService.findById(id).pipe(
          map((sms) => SMSTrafficActions.findByIdSuccess({ sms })),
          catchError(({ error }) => [SMSTrafficActions.smsActionFailure(error)])
        )
      )
    )
  );

  loadAll$ = createEffect(() =>
    this.actions$.pipe(
      ofType(SMSTrafficActions.loadAll),
      mergeMap(() =>
        this.smsService.getAll().pipe(
          map((smss) => SMSTrafficActions.loadAllSuccess({ smss })),
          catchError(({ error }) => [SMSTrafficActions.smsActionFailure(error)])
        )
      )
    )
  );

  searchSims$ = createEffect(() =>
    this.actions$.pipe(
        ofType(SMSTrafficActions.searchSMSTraffics),
        mergeMap(({searchCriteria}) => 
            this.smsService.searchSims(searchCriteria).pipe(
                map((smss) => SMSTrafficActions.searchSMSTrafficSuccess({smss})),
                catchError(({ error }) => [SMSTrafficActions.smsActionFailure(error)])
            )
        )
    )
  );
}
