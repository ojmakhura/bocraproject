// Generated by andromda-angular cartridge (app\usecase\action.store.ts.vsl) DO NOT EDIT
import { createAction, props } from '@ngrx/store';
import { FormCriteria } from '@app/model/bw/org/bocra/portal/form/form-criteria';
import { FormVO } from '@app/model/bw/org/bocra/portal/form/form-vo';

export enum FormActionType {
    SAVE_FORM = '[Form] Save Form',
    SAVE_FORM_SUCCESS = '[Form] Save Form Success',
    FIND_BY_ID = '[Form] Find By Id',
    FIND_BY_ID_SUCCESS = '[Form] Find By Id Success',
    LOAD_ALL = '[Form] Load All',
    LOAD_ALL_SUCCESS = '[Form] Load All Success',
    SEARCH_FORMS = '[Form] Search Forms',
    SEARCH_FORMS_SUCCESS = '[Form] Search Forms Success',
    RESET = '[Form] Reset',
    ACTION_FAILURE = '[Form] Action Failure'
}

export const saveForm = createAction(
    FormActionType.SAVE_FORM,
    props<{ form: FormVO }>()
);

export const saveFormSuccess = createAction(
    FormActionType.SAVE_FORM_SUCCESS,
    props<{ form: any }>()
);

export const findById = createAction(
    FormActionType.FIND_BY_ID,
    props<{ id: number }>()
);

export const findByIdSuccess = createAction(
    FormActionType.FIND_BY_ID_SUCCESS,
    props<{ form: FormVO }>()
);

export const loadAll = createAction(
    FormActionType.LOAD_ALL
);

export const loadAllSuccess = createAction(
    FormActionType.LOAD_ALL_SUCCESS,
    props<{ forms: FormVO[] }>()
);

export const searchForms = createAction(
    FormActionType.SEARCH_FORMS,
    props<{ searchCriteria: FormCriteria }>()
);

export const searchFormsSuccess = createAction(
    FormActionType.SEARCH_FORMS_SUCCESS,
    props<{ forms: FormVO[] }>()
);

export const reset = createAction(FormActionType.RESET);

export const formActionFailure = createAction(
    FormActionType.ACTION_FAILURE,
    props<{ error: any }>()
);