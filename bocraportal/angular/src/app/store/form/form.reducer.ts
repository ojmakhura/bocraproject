// Generated by andromda-angular cartridge (app\usecase\reducer.store.ts.vsl) DO NOT EDIT
import { Action, createFeature, createReducer, on } from '@ngrx/store';
import { FormCriteria } from '@app/model/bw/org/bocra/portal/form/form-criteria';
import { FormVO } from '@app/model/bw/org/bocra/portal/form/form-vo';
import * as FormActions from './form.action';

export const formKey = "form";

export interface FormState {
    form: FormVO;
    forms: FormVO[];
    searchCriteria: FormCriteria
    loading: boolean;
    id: number;
    error: any
}

export const initialState: FormState = {
    form: new FormVO,
    forms: [],
    searchCriteria: new FormCriteria,
    loading: false,
    id: 0,
    error: null
};

export const formReducer = createReducer(
    initialState,
    on(FormActions.saveForm, (state, action) => ({
        ...state,
        form: action.form
    })),
    on(FormActions.saveFormSuccess, (state, action) => ({
        ...state,
        form: action.form,
        forms: [...state.forms, action.form]
    })),
    on(FormActions.findById, (state, action) => ({
        ...state,
        id: action.id
    })),
    on(FormActions.findByIdSuccess, (state, action) => ({
        ...state,
        form: action.form,
        forms: [...state.forms, action.form]
    })),
    on(FormActions.loadAll, (state, action) => ({
        ...state
    })),
    on(FormActions.loadAllSuccess, (state, action) => ({
        ...state,
        form: new FormVO,
        forms: action.forms
    })),
    on(FormActions.searchForms, (state, action) => ({
        ...state,
        searchCriteria: action.searchCriteria
    })),
    on(FormActions.searchFormsSuccess, (state, action) => ({
        ...state,
        form: new FormVO,
        searchCriteria: new FormCriteria,
        forms: action.forms
    })),
    on(FormActions.reset, (state) => ({
      ...state,
      form: new FormVO(),
      searchCriteria: new FormCriteria(),
      forms: [],
    })),
    on(FormActions.formActionFailure, (state, action) => ({
        ...state,
        error: action.error
    }))
);

export const formFeature = createFeature(
    {
        name: formKey,
        reducer: formReducer
    }
);