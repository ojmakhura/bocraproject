// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.licensee.sector;

import bw.org.bocra.portal.licensee.LicenseeRepository;
import bw.org.bocra.portal.sector.SectorRepository;
import org.springframework.stereotype.Repository;

/**
 * @see LicenseeSector
 */
@Repository("licenseeSectorDao")
public class LicenseeSectorDaoImpl
    extends LicenseeSectorDaoBase
{
    
    public LicenseeSectorDaoImpl(
        SectorRepository sectorRepository,
        LicenseeRepository licenseeRepository,
        LicenseeSectorRepository licenseeSectorRepository
    ) {

        super(
            sectorRepository,
            licenseeRepository,
            licenseeSectorRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toLicenseeSectorVO(
        LicenseeSector source,
        LicenseeSectorVO target)
    {
        // TODO verify behavior of toLicenseeSectorVO
        super.toLicenseeSectorVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseeSectorVO toLicenseeSectorVO(final LicenseeSector entity)
    {
        // TODO verify behavior of toLicenseeSectorVO
        return super.toLicenseeSectorVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private LicenseeSector loadLicenseeSectorFromLicenseeSectorVO(LicenseeSectorVO licenseeSectorVO)
    {
        // TODO implement loadLicenseeSectorFromLicenseeSectorVO
        throw new UnsupportedOperationException("bw.org.bocra.portal.licensee.sector.loadLicenseeSectorFromLicenseeSectorVO(LicenseeSectorVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (licenseeSectorVO.getId() == null)
        {
            return  LicenseeSector.Factory.newInstance();
        }
        else
        {
            return this.load(licenseeSectorVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public LicenseeSector licenseeSectorVOToEntity(LicenseeSectorVO licenseeSectorVO)
    {
        // TODO verify behavior of licenseeSectorVOToEntity
        LicenseeSector entity = this.loadLicenseeSectorFromLicenseeSectorVO(licenseeSectorVO);
        this.licenseeSectorVOToEntity(licenseeSectorVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void licenseeSectorVOToEntity(
        LicenseeSectorVO source,
        LicenseeSector target,
        boolean copyIfNull)
    {
        // TODO verify behavior of licenseeSectorVOToEntity
        super.licenseeSectorVOToEntity(source, target, copyIfNull);
    }
}