// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.complaint;

import bw.org.bocra.portal.document.DocumentRepository;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * @see ComplaintReply
 */
@Repository("complaintReplyDao")
@Transactional
public class ComplaintReplyDaoImpl
    extends ComplaintReplyDaoBase
{
    
    public ComplaintReplyDaoImpl(
        ComplaintRepository complaintRepository,
        DocumentRepository documentRepository,
        ComplaintReplyRepository complaintReplyRepository
    ) {

        super(
            complaintRepository,
            documentRepository,
            complaintReplyRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toComplaintReplyVO(
        ComplaintReply source,
        ComplaintReplyVO target)
    {
        // TODO verify behavior of toComplaintReplyVO
        super.toComplaintReplyVO(source, target);
        // WARNING! No conversion for target.complaint (can't convert source.getComplaint():bw.org.bocra.portal.complaint.Complaint to bw.org.bocra.portal.complaint.ComplaintVO
        // WARNING! No conversion for target.documents (can't convert source.getDocuments():bw.org.bocra.portal.document.Document to bw.org.bocra.portal.document.DocumentVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ComplaintReplyVO toComplaintReplyVO(final ComplaintReply entity)
    {
        // TODO verify behavior of toComplaintReplyVO
        return super.toComplaintReplyVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private ComplaintReply loadComplaintReplyFromComplaintReplyVO(ComplaintReplyVO complaintReplyVO)
    {
        // TODO implement loadComplaintReplyFromComplaintReplyVO
        throw new UnsupportedOperationException("bw.org.bocra.portal.complaint.loadComplaintReplyFromComplaintReplyVO(ComplaintReplyVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (complaintReplyVO.getId() == null)
        {
            return  ComplaintReply.Factory.newInstance();
        }
        else
        {
            return this.load(complaintReplyVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public ComplaintReply complaintReplyVOToEntity(ComplaintReplyVO complaintReplyVO)
    {
        // TODO verify behavior of complaintReplyVOToEntity
        ComplaintReply entity = this.loadComplaintReplyFromComplaintReplyVO(complaintReplyVO);
        this.complaintReplyVOToEntity(complaintReplyVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void complaintReplyVOToEntity(
        ComplaintReplyVO source,
        ComplaintReply target,
        boolean copyIfNull)
    {
        // TODO verify behavior of complaintReplyVOToEntity
        super.complaintReplyVOToEntity(source, target, copyIfNull);
    }
}