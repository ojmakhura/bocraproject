// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.licensee.form;

import bw.org.bocra.portal.form.Form;
import bw.org.bocra.portal.form.FormRepository;
import bw.org.bocra.portal.form.FormVO;
import bw.org.bocra.portal.licensee.LicenseeRepository;
import bw.org.bocra.portal.licensee.LicenseeVO;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * @see LicenseeForm
 */
@Repository("licenseeFormDao")
@Transactional
public class LicenseeFormDaoImpl
    extends LicenseeFormDaoBase
{
    
    public LicenseeFormDaoImpl(
        LicenseeRepository licenseeRepository,
        FormRepository formRepository,
        LicenseeFormRepository licenseeFormRepository
    ) {

        super(
            licenseeRepository,
            formRepository,
            licenseeFormRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toLicenseeFormVO(
        LicenseeForm source,
        LicenseeFormVO target)
    {
        // TODO verify behavior of toLicenseeFormVO
        super.toLicenseeFormVO(source, target);
        // WARNING! No conversion for target.form (can't convert
        // source.getForm():bw.org.bocra.portal.form.Form to
        // bw.org.bocra.portal.form.FormVO
        if (source.getForm() != null && source.getForm().getId() != null) {
            Form form = source.getForm();
            FormVO vo = new FormVO();

            vo.setId(source.getId());
            vo.setCreatedBy(form.getCreatedBy());
            vo.setUpdatedBy(form.getUpdatedBy());
            vo.setCreatedDate(form.getCreatedDate());
            vo.setUpdatedDate(form.getUpdatedDate());
            vo.setCode(form.getCode());
            vo.setFormName(form.getFormName());
            vo.setDescription(form.getDescription());
            vo.setEntryType(form.getEntryType());

            target.setForm(vo);
        }
        // WARNING! No conversion for target.licensee (can't convert
        // source.getLicensee():bw.org.bocra.portal.licensee.Licensee to
        // bw.org.bocra.portal.licensee.LicenseeVO
        if (source.getLicensee() != null && source.getLicensee().getId() != null) {

            LicenseeVO licensee = new LicenseeVO();

            licensee.setId(source.getLicensee().getId());
            licensee.setCreatedBy(source.getLicensee().getCreatedBy());
            licensee.setUpdatedBy(source.getLicensee().getUpdatedBy());
            licensee.setCreatedDate(source.getLicensee().getCreatedDate());
            licensee.setUpdatedDate(source.getLicensee().getUpdatedDate());
            licensee.setStatus(source.getLicensee().getStatus());
            licensee.setUin(source.getLicensee().getUin());
            licensee.setLicenseeName(source.getLicensee().getLicenseeName());
            licensee.setAddress(source.getLicensee().getAddress());

            target.setLicensee(licensee);
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LicenseeFormVO toLicenseeFormVO(final LicenseeForm entity)
    {
        // TODO verify behavior of toLicenseeFormVO
        return super.toLicenseeFormVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private LicenseeForm loadLicenseeFormFromLicenseeFormVO(LicenseeFormVO licenseeFormVO)
    {
        if (licenseeFormVO.getId() == null)
        {
            return  LicenseeForm.Factory.newInstance();
        }
        else
        {
            return this.load(licenseeFormVO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public LicenseeForm licenseeFormVOToEntity(LicenseeFormVO licenseeFormVO)
    {
        // TODO verify behavior of licenseeFormVOToEntity
        LicenseeForm entity = this.loadLicenseeFormFromLicenseeFormVO(licenseeFormVO);
        this.licenseeFormVOToEntity(licenseeFormVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void licenseeFormVOToEntity(
        LicenseeFormVO source,
        LicenseeForm target,
        boolean copyIfNull)
    {
        // TODO verify behavior of licenseeFormVOToEntity
        super.licenseeFormVOToEntity(source, target, copyIfNull);

        if (source.getForm() != null && source.getForm().getId() != null) {
            target.setForm(getFormDao().load(source.getForm().getId()));
        }

        if (source.getLicensee() != null && source.getLicensee().getId() != null) {

            target.setLicensee(getLicenseeDao().get(source.getLicensee().getId()));
        }
    }
}