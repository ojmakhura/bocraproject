// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.form.mail;

import org.springframework.stereotype.Repository;

import bw.org.bocra.portal.period.Period;
import bw.org.bocra.portal.period.PeriodVO;

/**
 * @see MailVolume
 */
@Repository("mailVolumeDao")
public class MailVolumeDaoImpl
    extends MailVolumeDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toMailVolumeVO(
        MailVolume source,
        MailVolumeVO target)
    {
        // TODO verify behavior of toMailVolumeVO
        super.toMailVolumeVO(source, target);
        // WARNING! No conversion for target.period (can't convert source.getPeriod():bw.org.bocra.portal.period.config.Period to bw.org.bocra.portal.period.config.PeriodVO

        if(source.getPeriod() != null) {

            PeriodVO vo = new PeriodVO();
            getPeriodDao().toPeriodVO(source.getPeriod(), vo);

            target.setPeriod(vo);
        }

    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MailVolumeVO toMailVolumeVO(final MailVolume entity)
    {
        // TODO verify behavior of toMailVolumeVO
        return super.toMailVolumeVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private MailVolume loadMailVolumeFromMailVolumeVO(MailVolumeVO mailVolumeVO)
    {
        if (mailVolumeVO.getId() == null)
        {
            return  MailVolume.Factory.newInstance();
        }
        else
        {
            return this.load(mailVolumeVO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public MailVolume mailVolumeVOToEntity(MailVolumeVO mailVolumeVO)
    {
        // TODO verify behavior of mailVolumeVOToEntity
        MailVolume entity = this.loadMailVolumeFromMailVolumeVO(mailVolumeVO);
        this.mailVolumeVOToEntity(mailVolumeVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void mailVolumeVOToEntity(
        MailVolumeVO source,
        MailVolume target,
        boolean copyIfNull)
    {
        // TODO verify behavior of mailVolumeVOToEntity
        super.mailVolumeVOToEntity(source, target, copyIfNull);

        if(source.getPeriod() != null) {

            Period instance = Period.Factory.newInstance();
            getPeriodDao().periodVOToEntity(source.getPeriod(), instance, copyIfNull);

            target.setPeriod(instance);
        }

    }
}