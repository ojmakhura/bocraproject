// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.contact;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

/**
 * @see ContactMessage
 */
@Repository("contactMessageDao")
@Transactional
public class ContactMessageDaoImpl
    extends ContactMessageDaoBase
{
    
    public ContactMessageDaoImpl(
        ContactMessageRepository contactMessageRepository
    ) {

        super(
            contactMessageRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toContactMessageVO(
        ContactMessage source,
        ContactMessageVO target)
    {
        // TODO verify behavior of toContactMessageVO
        super.toContactMessageVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactMessageVO toContactMessageVO(final ContactMessage entity)
    {
        // TODO verify behavior of toContactMessageVO
        return super.toContactMessageVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private ContactMessage loadContactMessageFromContactMessageVO(ContactMessageVO contactMessageVO)
    {
        // TODO implement loadContactMessageFromContactMessageVO
        throw new UnsupportedOperationException("bw.org.bocra.portal.contact.loadContactMessageFromContactMessageVO(ContactMessageVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (contactMessageVO.getId() == null)
        {
            return  ContactMessage.Factory.newInstance();
        }
        else
        {
            return this.load(contactMessageVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public ContactMessage contactMessageVOToEntity(ContactMessageVO contactMessageVO)
    {
        // TODO verify behavior of contactMessageVOToEntity
        ContactMessage entity = this.loadContactMessageFromContactMessageVO(contactMessageVO);
        this.contactMessageVOToEntity(contactMessageVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void contactMessageVOToEntity(
        ContactMessageVO source,
        ContactMessage target,
        boolean copyIfNull)
    {
        // TODO verify behavior of contactMessageVOToEntity
        super.contactMessageVOToEntity(source, target, copyIfNull);
    }
}