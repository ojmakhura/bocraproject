// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.form.field;

import org.springframework.stereotype.Repository;

import bw.org.bocra.portal.form.Form;
import bw.org.bocra.portal.form.FormVO;

/**
 * @see FormField
 */
@Repository("formFieldDao")
public class FormFieldDaoImpl
    extends FormFieldDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toFormFieldVO(
        FormField source,
        FormFieldVO target)
    {
        // TODO verify behavior of toFormFieldVO
        super.toFormFieldVO(source, target);
        // WARNING! No conversion for target.form (can't convert source.getForm():bw.org.bocra.portal.form.Form to bw.org.bocra.portal.form.FormVO
        if(source.getForm() != null) {
            FormVO form = new FormVO();
            form.setId(source.getForm().getId());
            form.setCode (source.getForm().getCode());
            form.setFormName(source.getForm().getFormName());
            
            target.setForm(form);
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormFieldVO toFormFieldVO(final FormField entity)
    {
        // TODO verify behavior of toFormFieldVO
        return super.toFormFieldVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private FormField loadFormFieldFromFormFieldVO(FormFieldVO formFieldVO)
    {
        if (formFieldVO.getId() == null)
        {
            return  FormField.Factory.newInstance();
        }
        else
        {
            return this.load(formFieldVO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public FormField formFieldVOToEntity(FormFieldVO formFieldVO)
    {
        // TODO verify behavior of formFieldVOToEntity
        FormField entity = this.loadFormFieldFromFormFieldVO(formFieldVO);
        this.formFieldVOToEntity(formFieldVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void formFieldVOToEntity(
        FormFieldVO source,
        FormField target,
        boolean copyIfNull)
    {
        // TODO verify behavior of formFieldVOToEntity
        super.formFieldVOToEntity(source, target, copyIfNull);

        if(source.getForm() != null) {

            Form form = Form.Factory.newInstance();
            formDao.formVOToEntity(source.getForm(), form, copyIfNull);
            
            if(form.getId() == null) {
                form = formDao.create(form);
            }

            target.setForm(form);
        } 

    }
}