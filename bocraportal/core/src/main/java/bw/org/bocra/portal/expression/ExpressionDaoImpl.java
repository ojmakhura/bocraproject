// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.expression;

import org.springframework.stereotype.Repository;

/**
 * @see Expression
 */
@Repository("expressionDao")
public class ExpressionDaoImpl
    extends ExpressionDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toExpressionVO(
        Expression source,
        ExpressionVO target)
    {
        // TODO verify behavior of toExpressionVO
        super.toExpressionVO(source, target);
        // WARNING! No conversion for target.formField (can't convert source.getFormField():bw.org.bocra.portal.form.field.FormField to bw.org.bocra.portal.form.field.FormFieldVO
        // WARNING! No conversion for target.root (can't convert source.getRoot():bw.org.bocra.portal.expression.ExpressionNode to bw.org.bocra.portal.form.field.FormFieldVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExpressionVO toExpressionVO(final Expression entity)
    {
        // TODO verify behavior of toExpressionVO
        return super.toExpressionVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Expression loadExpressionFromExpressionVO(ExpressionVO expressionVO)
    {
        // TODO implement loadExpressionFromExpressionVO
        throw new UnsupportedOperationException("bw.org.bocra.portal.expression.loadExpressionFromExpressionVO(ExpressionVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (expressionVO.getId() == null)
        {
            return  Expression.Factory.newInstance();
        }
        else
        {
            return this.load(expressionVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Expression expressionVOToEntity(ExpressionVO expressionVO)
    {
        // TODO verify behavior of expressionVOToEntity
        Expression entity = this.loadExpressionFromExpressionVO(expressionVO);
        this.expressionVOToEntity(expressionVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void expressionVOToEntity(
        ExpressionVO source,
        Expression target,
        boolean copyIfNull)
    {
        // TODO verify behavior of expressionVOToEntity
        super.expressionVOToEntity(source, target, copyIfNull);
    }
}