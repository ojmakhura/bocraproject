// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on 01/29/2022 22:20:44+0200.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.user;

import org.springframework.stereotype.Repository;

/**
 * @see UserOrganisation
 */
@Repository("userOrganisationDao")
public class UserOrganisationDaoImpl
    extends UserOrganisationDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toUserOrganisationVO(
        UserOrganisation source,
        UserOrganisationVO target)
    {
        // TODO verify behavior of toUserOrganisationVO
        super.toUserOrganisationVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserOrganisationVO toUserOrganisationVO(final UserOrganisation entity)
    {
        // TODO verify behavior of toUserOrganisationVO
        return super.toUserOrganisationVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private UserOrganisation loadUserOrganisationFromUserOrganisationVO(UserOrganisationVO userOrganisationVO)
    {

        if (userOrganisationVO.getId() == null)
        {
            return  UserOrganisation.Factory.newInstance();
        }
        else
        {
            return this.load(userOrganisationVO.getId());
        }
    }

    /**
     * {@inheritDoc}
     */
    public UserOrganisation userOrganisationVOToEntity(UserOrganisationVO userOrganisationVO)
    {
        // TODO verify behavior of userOrganisationVOToEntity
        UserOrganisation entity = this.loadUserOrganisationFromUserOrganisationVO(userOrganisationVO);
        this.userOrganisationVOToEntity(userOrganisationVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void userOrganisationVOToEntity(
        UserOrganisationVO source,
        UserOrganisation target,
        boolean copyIfNull)
    {
        // TODO verify behavior of userOrganisationVOToEntity
        super.userOrganisationVOToEntity(source, target, copyIfNull);

        if(source.getOrganisation() != null) {
            target.setLicensee(licenseeDao.licenseeVOToEntity(source.getOrganisation()));
        }

        if(source.getUser() != null) {
            //target.setUserId(source.getUser().get);
        }
    }
}