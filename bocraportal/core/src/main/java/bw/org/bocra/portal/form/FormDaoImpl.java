// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.org.bocra.portal.form;

import org.springframework.stereotype.Repository;

/**
 * @see Form
 */
@Repository("formDao")
public class FormDaoImpl
    extends FormDaoBase
{
    /**
     * {@inheritDoc}
     */
    @Override
    public void toFormVO(
        Form source,
        FormVO target)
    {
        // TODO verify behavior of toFormVO
        super.toFormVO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormVO toFormVO(final Form entity)
    {
        // TODO verify behavior of toFormVO
        return super.toFormVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Form loadFormFromFormVO(FormVO formVO)
    {
        // TODO implement loadFormFromFormVO
        throw new UnsupportedOperationException("bw.org.bocra.portal.form.loadFormFromFormVO(FormVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (formVO.getId() == null)
        {
            return  Form.Factory.newInstance();
        }
        else
        {
            return this.load(formVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Form formVOToEntity(FormVO formVO)
    {
        // TODO verify behavior of formVOToEntity
        Form entity = this.loadFormFromFormVO(formVO);
        this.formVOToEntity(formVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void formVOToEntity(
        FormVO source,
        Form target,
        boolean copyIfNull)
    {
        // TODO verify behavior of formVOToEntity
        super.formVOToEntity(source, target, copyIfNull);
    }
}