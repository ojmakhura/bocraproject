// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringService.vsl in andromda-spring-cartridge on $springUtils.date. Do not modify by hand!.
//
package bw.org.bocra.portal.auth;

import bw.org.bocra.portal.menu.MenuSectionDao;
import bw.org.bocra.portal.menu.MenuSectionRepository;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
@ExtendWith(MockitoExtension.class)
public class AuthorisationServiceTest {

    protected Logger logger = LoggerFactory.getLogger(AuthorisationServiceTest.class);
    
    @InjectMocks
    private AuthorisationServiceImpl authorisationService;

    @Mock
    private AuthorisationDao authorisationDao;

    @Mock
    private AuthorisationRepository authorisationRepository;
    @Mock
    private MenuSectionDao menuSectionDao;

    @Mock
    private MenuSectionRepository menuSectionRepository;

    @Test
    public void checkInjects() {

        Assertions.assertNotNull(authorisationDao);
        Assertions.assertNotNull(authorisationRepository);
        Assertions.assertNotNull(menuSectionDao);
        Assertions.assertNotNull(menuSectionRepository);
        Assertions.assertNotNull(authorisationService);

    }
    

    @Test
    public void findById_success() {
        
    }

    @Test
    public void findById_fail() {
        
    }


    @Test
    public void save_success() {
        
    }

    @Test
    public void save_fail() {
        
    }

    @Test
    public void save_authorisation_null() {
        
    }

    @Test
    public void save_Authorisation_Id_null() {
        
    }

    @Test
    public void save_Authorisation_CreatedBy_null() {
        
    }

    @Test
    public void save_Authorisation_UpdatedBy_null() {
        
    }

    @Test
    public void save_Authorisation_CreatedDate_null() {
        
    }

    @Test
    public void save_Authorisation_UpdatedDate_null() {
        
    }

    @Test
    public void save_Authorisation_AccessPoint_null() {
        
    }

    @Test
    public void save_Authorisation_Roles_null() {
        
    }


    @Test
    public void remove_success() {
        
    }

    @Test
    public void remove_fail() {
        
    }

    @Test
    public void search_success() {
        
    }

    @Test
    public void search_fail() {
        
    }

    @Test
    public void search_criteria_null() {
        
    }

    @Test
    public void search_Criteria_AccessPointName_null() {
        
    }

    @Test
    public void search_Criteria_AccessPointUrl_null() {
        
    }

    @Test
    public void search_Criteria_Roles_null() {
        
    }


    @Test
    public void getAll_success() {
        
    }

    @Test
    public void getAll_fail() {
        
    }


    @Test
    public void getAccessTypeCodeAuthorisations_success() {
        
    }

    @Test
    public void getAccessTypeCodeAuthorisations_fail() {
        
    }


    @Test
    public void assignMenuSection_success() {
        
    }

    @Test
    public void assignMenuSection_fail() {
        
    }


    @Test
    public void findByRolesAndUrl_success() {
        
    }

    @Test
    public void findByRolesAndUrl_fail() {
        
    }

    @Test
    public void findByRolesAndUrl_url_null() {
        
    }


    @Test
    public void findByUrlPrefix_success() {
        
    }

    @Test
    public void findByUrlPrefix_fail() {
        
    }

    @Test
    public void findByUrlPrefix_prefix_null() {
        
    }

}