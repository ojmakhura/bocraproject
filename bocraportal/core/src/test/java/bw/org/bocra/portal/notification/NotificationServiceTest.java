// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringService.vsl in andromda-spring-cartridge on $springUtils.date. Do not modify by hand!.
//
package bw.org.bocra.portal.notification;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
@ExtendWith(MockitoExtension.class)
public class NotificationServiceTest {

    protected Logger logger = LoggerFactory.getLogger(NotificationServiceTest.class);
    
    @InjectMocks
    private NotificationServiceImpl notificationService;

    @Mock
    private NotificationDao notificationDao;

    @Mock
    private NotificationRepository notificationRepository;

    @Test
    public void checkInjects() {

        Assertions.assertNotNull(notificationDao);
        Assertions.assertNotNull(notificationRepository);
        Assertions.assertNotNull(notificationService);

    }
    

    @Test
    public void findById_success() {
        
    }

    @Test
    public void findById_fail() {
        
    }


    @Test
    public void save_success() {
        
    }

    @Test
    public void save_fail() {
        
    }

    @Test
    public void save_notification_null() {
        
    }

    @Test
    public void save_Notification_Id_null() {
        
    }

    @Test
    public void save_Notification_Subject_null() {
        
    }

    @Test
    public void save_Notification_TargetType_null() {
        
    }

    @Test
    public void save_Notification_Read_null() {
        
    }

    @Test
    public void save_Notification_Message_null() {
        
    }

    @Test
    public void save_Notification_NotificationDate_null() {
        
    }

    @Test
    public void save_Notification_TargetId_null() {
        
    }

    @Test
    public void save_Notification_TargetName_null() {
        
    }

    @Test
    public void save_Notification_Type_null() {
        
    }


    @Test
    public void remove_success() {
        
    }

    @Test
    public void remove_fail() {
        
    }


    @Test
    public void getAll_success() {
        
    }

    @Test
    public void getAll_fail() {
        
    }


    @Test
    public void search_success() {
        
    }

    @Test
    public void search_fail() {
        
    }

    @Test
    public void loadUserNotifications_success() {
        
    }

    @Test
    public void loadUserNotifications_fail() {
        
    }

    @Test
    public void loadUserNotifications_userId_null() {
        
    }


    @Test
    public void getUnreadCount_success() {
        
    }

    @Test
    public void getUnreadCount_fail() {
        
    }

}