#server.servlet.context-path=/bocraportal/api/
server.port = ${API_SERVER_PORT}
spring.mvc.format.date=dd-MM-yyyy
#spring.mvc.format.date-time=iso
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss
#spring.mvc.format.time=HH:mm:ss
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER
# spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type=TRACE
# spring.main.allow-bean-definition-overriding=true

logging.level.org.springframework.web=${API_LOG_LEVEL}
logging.level.bw.org.bocra.portal=${API_LOG_LEVEL}

keycloak.realm=${KEYCLOAK_REALM}
keycloak.auth-server-url=${KEYCLOAK_AUTH_URL}
keycloak.ssl-required=none
keycloak.public-client=true
#keycloak resource is the client ID
keycloak.resource=${KEYCLOAK_API_CLIENT}
keycloak.credentials.secret=${KEYCLOAK_API_CLIENT_SECRET}

 ##${KEYCLOAK_API_CLIENT_SECRET}
keycloak.use-resource-role-mappings = true
#The line below will prevent redirect to login page
keycloak.bearer-only=true
# keycloak.truststore=/usr/lib/jvm/java-1.11.0-openjdk-amd64/lib/security/cacerts
# keycloak.truststore-password=changeit
server.connection-timeout=6000

bocra.client-secret=${KEYCLOAK_API_CLIENT_SECRET}
bocra.scope=openid
bocra.authorization-grant-type=password

bocra.authorization-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
bocra.user-info-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
bocra.users-uri=${KEYCLOAK_AUTH_URL}/admin/realms/${KEYCLOAK_REALM}/users
bocra.token-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
bocra.logout=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/logout
bocra.jwk-set-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs

## Swagger UI security
openapi=3.0.0
components.securitySchemes.openId.openId=openIdConnect
components.securitySchemes.openId.openIdConnectUrl=${KEYCLOAK_AUTH_URL}/.well-known/openid-configuration
swagger.project-title=@project.name@
swagger.project-version=@project.version@
swagger.project-description=@project.description@
security.config.openid-discovery=false
security.config.bearer=true
components.securitySchemes.bearerAuth.type=http
components.securitySchemes.bearerAuth.scheme=bearer
components.securitySchemes.bearerAuth.bearerFormat=JWT

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

# management.endpoints.web.exposure.include=*
#Expose actuator endpoints
management.endpoints.web.exposure.include=*

#Spring Boot Client Registration specific configurations
# spring.boot.admin.client.instance.service-base-url=http://127.0.0.1:${API_SERVER_PORT}
# spring.boot.admin.client.url=http://localhost:8092/
# spring.boot.admin.client.instance.name=BOCRA Portal API Service

bocra.comm.url=${COMM_URL}
bocra.web.url=${WEB_URL}

# Rabbir MQ
spring.rabbitmq.host=${RABBITMQ_DOMAIN}
spring.rabbitmq.port=${RABBITMQ_SERVICE_PORT}
spring.rabbitmq.username=${RABBITMQ_DEFAULT_USER}
spring.rabbitmq.password=${RABBITMQ_DEFAULT_PASS}
spring.rabbitmq.exchange=q.bocraportal_exchange
spring.rabbitmq.queue=q.email_queue
spring.rabbitmq.routingkey=queue_emails
