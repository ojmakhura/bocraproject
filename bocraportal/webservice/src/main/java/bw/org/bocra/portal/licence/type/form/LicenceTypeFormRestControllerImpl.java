// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWSImpl.java.vsl in andromda-webservices.
//
package bw.org.bocra.portal.licence.type.form;

import java.util.NoSuchElementException;
import java.util.Optional;

import javax.persistence.EntityNotFoundException;

import org.postgresql.util.PSQLException;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/licence/type/form")
@CrossOrigin()
public class LicenceTypeFormRestControllerImpl extends LicenceTypeFormRestControllerBase {
    
    public LicenceTypeFormRestControllerImpl(
        LicenceTypeFormService licenceTypeFormService    ) {
        
        super(licenceTypeFormService);
    }


    @Override
    public ResponseEntity<?> handleCreate(Long licenceTypeId, Long formId) {
        try {
            logger.debug("Creates Licence Type Form of Licence Type Id "+licenceTypeId+" and Form Id"+formId);
            Optional<?> data = Optional.of(licenceTypeFormService.create(licenceTypeId, formId));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body("Could not create a licence type form entry. Please contact administrator.");
            }

            return response;
        } catch (IllegalArgumentException | LicenceTypeFormServiceException e) {

            e.printStackTrace();

            String message = e.getMessage();

            if(e instanceof IllegalArgumentException || e.getCause() instanceof IllegalArgumentException) {

                if(message.contains("'licenceTypeForm'")) {

                    message = "The licence type form information is missing.";

                } else if(message.contains("or its id can not be null")) {
                    if(message.contains("'licenceTypeForm.form'")) {
                
                        message = "The form type or its id is missing.";

                    } else if(message.contains("'licenceTypeForm.licenceType'")) {
                
                        message = "The licence type or its id is missing.";
                    }
                
                } else {
                    message = "An unknown error has occured. Please contact the system administrator.";
                }

                return ResponseEntity.badRequest().body(message);

            } else if(e.getCause() instanceof PSQLException) {

                if (e.getCause().getMessage().contains("duplicate key")) {
                    if(e.getCause().getMessage().contains("(licencetypeformunique)")) {

                        return ResponseEntity.badRequest().body("An licence type form has been already created.");
                    } 
                    
                } else if (e.getCause().getMessage().contains("null value in column")) {
                    if (e.getCause().getMessage().contains("column \"form_fk\"")) {
                        return ResponseEntity.badRequest().body("The form value is missing.");
                    } else if (e.getCause().getMessage().contains("column \"licence_type_fk\"")) {
                        return ResponseEntity.badRequest().body("The licence type value is missing.");
                    }
                }
                
                return ResponseEntity.badRequest().body("An unknown database error has occured. Please contact the portal administrator.");
            } 

            return ResponseEntity.badRequest().body("An unknown error has occured. Please contact the portal administrator.");
        } catch(Exception e) {

            e.printStackTrace();
            logger.error(e.getMessage(), e);
            return ResponseEntity.badRequest().body("An unknown error has occured. Please contact the portal administrator.");
        }
    }

    @Override
    public ResponseEntity<?> handleFindByForm(Long formId) {
        try {
            logger.debug("Search Licence Type Form by Form Id "+formId);
            Optional<?> data = Optional.ofNullable(licenceTypeFormService.findByForm(formId));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body("Could not find the licence type form with this form id.");
            }

            return response;
        } catch (Exception e) {
            e.printStackTrace();

            String message = e.getMessage();

            logger.error(message, e);
            if (e instanceof NoSuchElementException || e.getCause() instanceof NoSuchElementException
                    || e instanceof EntityNotFoundException || e.getCause() instanceof EntityNotFoundException) {
                return ResponseEntity.status(HttpStatus.NOT_FOUND).body(String.format("Licence type with form id %d not found.", formId));
            } else {
                message = "An unknown error has occured. Please contact the system administrator.";
            }
            return ResponseEntity.badRequest().body(message);
        }
    }

    @Override
    public ResponseEntity<?> handleFindById(Long id) {
        try {
            logger.debug("Search Licence Type Form by Id "+id);
            Optional<?> data = Optional.of(licenceTypeFormService.findById(id));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body(String.format("Licence type form with id %ld not found.", id));
            }

            return response;
        } catch (Exception e) {
            e.printStackTrace();

            String message = e.getMessage();
            if (e instanceof NoSuchElementException || e.getCause() instanceof NoSuchElementException
                    || e instanceof EntityNotFoundException || e.getCause() instanceof EntityNotFoundException) {
                return ResponseEntity.status(HttpStatus.NOT_FOUND).body(String.format("Licence type form with id %d not found.", id));
            } else {
                message = "An unknown error has occured. Please contact the system administrator.";
            }

            logger.error(message, e);
            return ResponseEntity.badRequest().body(message);
        }
    }

    @Override
    public ResponseEntity<?> handleFindByLicenceType(Long licenceTypeId) {
        try {
            logger.debug("Search Licence Type Form by Licence Type Id "+licenceTypeId);
            Optional<?> data = Optional.of(licenceTypeFormService.findByLicenceType(licenceTypeId));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body("Could not find the licence type form with this licence type id.");
            }

            return response;
        } catch (Exception e) {
            e.printStackTrace();

            String message = e.getMessage();

            logger.error(message, e);
            if (e instanceof NoSuchElementException || e.getCause() instanceof NoSuchElementException
                    || e instanceof EntityNotFoundException || e.getCause() instanceof EntityNotFoundException) {
                return ResponseEntity.status(HttpStatus.NOT_FOUND).body(String.format("Licence type with licence type id %d not found.", licenceTypeId));
            } else {
                message = "An unknown error has occured. Please contact the system administrator.";
            }
            return ResponseEntity.badRequest().body(message);
        }
    }

    @Override
    public ResponseEntity<?> handleGetAll() {
        try {
            logger.debug("Display all Licence Type Forms");
            return ResponseEntity.ok().body(licenceTypeFormService.getAll());
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return ResponseEntity.badRequest().body("An unknown error has occurred. Please contact the site administrator.");
        }
    }

    @Override
    public ResponseEntity<?> handleRemove(Long id) {
        try {
            logger.debug("Deletes Licence Type Form by Id "+id);
            Optional<?> data = Optional.of(licenceTypeFormService.remove(id));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body("Failed to delete the licence type form with id " + id);
            }

            return response;
        } catch (Exception e) {
            e.printStackTrace();
            logger.error(e.getMessage(), e);

            if(e instanceof EmptyResultDataAccessException || e.getCause() instanceof EmptyResultDataAccessException) {
                return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Could not delete licence type form with id " + id);
            }

            return ResponseEntity.badRequest().body("Unknown error encountered when deleting licence type form with id " + id);
        }
    }

    @Override
    public ResponseEntity<?> handleUpdateForm(Long id, Long formId) {
        try {
            logger.debug("Update Licence Type Form by Id "+id+" and Foprm Id"+formId);
            Optional<?> data = Optional.of(licenceTypeFormService.updateForm(id, formId));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body("Failed to change the form id.");
            }

            return response;
        } catch (Exception e) {
            logger.error(e.getMessage(), e );
            return ResponseEntity.badRequest().body("An unknown error has occurred. Please contact the site administrator.");
        }
    }

    @Override
    public ResponseEntity<?> handleUpdateLicenceType(Long id, Long licenceTypeId) {
        try {
            logger.debug("Update Licence Type Form by Id "+id+" and Licence Type Id "+licenceTypeId);
            Optional<?> data = Optional.of(licenceTypeFormService.updateLicenceType(id, licenceTypeId));
            ResponseEntity<?> response;

            if(data.isPresent()) {
                response = ResponseEntity.ok().body(data.get());
            } else {
                response = ResponseEntity.status(HttpStatus.NOT_FOUND).body("Failed to change the licence type id.");
            }

            return response;
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return ResponseEntity.badRequest().body("An unknown error has occurred. Please contact the site administrator.");
        }
    }
}