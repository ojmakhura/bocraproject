// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices. Do not modify by hand!.
//
package bw.org.bocra.portal.period.config;

import java.util.Collection;

import org.junit.ClassRule;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.ResponseEntity;
import org.springframework.security.test.context.support.WithMockUser;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.testcontainers.containers.PostgreSQLContainer;

import com.fasterxml.jackson.databind.ObjectMapper;

import bw.org.bocra.portal.BocraportalTestContainer;
import bw.org.bocra.portal.GenericRestTest;
import bw.org.bocra.portal.GenericTestData;

@SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT)
@RunWith(SpringRunner.class)
@AutoConfigureMockMvc
public class PeriodConfigRestControllerTest extends GenericRestTest<PeriodConfigVO, PeriodConfigRepository, PeriodConfigCriteria, PeriodConfigRestController> {

    private String path = "/period/config";

    protected Logger logger = LoggerFactory.getLogger(PeriodConfigRestControllerTest.class);

    @Autowired
    private MockMvc mockMvc;

    @Autowired
    private ObjectMapper objectMapper;


    @Autowired
    protected PeriodConfigService periodConfigService;

    @Autowired
    public PeriodConfigRestControllerTest(PeriodConfigRestController restController,
            GenericTestData<PeriodConfigVO, PeriodConfigRepository, PeriodConfigCriteria, PeriodConfigRestController> testData) {
        super(restController, testData);
    }

    @BeforeEach
    public void clean() {
    }

    @Override
    protected void basicCompareAssertions(PeriodConfigVO o1, PeriodConfigVO o2) {
        Assertions.assertEquals(o1.getId(), o2.getId());
        Assertions.assertEquals(o1.getPeriodConfigName(), o2.getPeriodConfigName());        
    }

    @Override
    protected Class<PeriodConfigCriteria> getCriteriaClass() {
        return PeriodConfigCriteria.class;
    }

    @Override
    protected Class<PeriodConfigVO> getDataClass() {
        return PeriodConfigVO.class;
    }

    @Override
    protected void searchResultsAssertions(ResponseEntity<?> response) {
        // TODO Auto-generated method stub
        
    }

}