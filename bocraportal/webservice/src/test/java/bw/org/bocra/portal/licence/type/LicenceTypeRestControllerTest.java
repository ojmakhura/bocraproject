// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by SpringWS.java.vsl in andromda-webservices. Do not modify by hand!.
//
package bw.org.bocra.portal.licence.type;

import org.junit.ClassRule;
import org.junit.jupiter.api.Assertions;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;
import org.testcontainers.containers.PostgreSQLContainer;

import bw.org.bocra.portal.BocraportalTestContainer;
import bw.org.bocra.portal.GenericRestTest;
import bw.org.bocra.portal.GenericTestData;

@SpringBootTest(webEnvironment=SpringBootTest.WebEnvironment.RANDOM_PORT)
@RunWith(SpringRunner.class)
@AutoConfigureMockMvc
public class LicenceTypeRestControllerTest extends GenericRestTest<LicenceTypeVO, LicenceTypeRepository, LicenceTypeCriteria, LicenceTypeRestController> {

    @ClassRule
    public static PostgreSQLContainer postgreSQLContainer = BocraportalTestContainer.getInstance();

    private String path = "/licence/type";

    protected Logger logger = LoggerFactory.getLogger(LicenceTypeRestControllerTest.class);

    @Autowired
    protected LicenceTypeService licenceTypeService;

    @Autowired
    public LicenceTypeRestControllerTest(LicenceTypeRestController restController,
            GenericTestData<LicenceTypeVO, LicenceTypeRepository, LicenceTypeCriteria, LicenceTypeRestController> testData) {
        super(restController, testData);
    }

    @Override
    protected void basicCompareAssertions(LicenceTypeVO o1, LicenceTypeVO o2) {
        
        Assertions.assertEquals(o1.getId(), o2.getId());
        Assertions.assertEquals(o1.getCode(), o2.getCode());
    }


    @Override
    protected Class<LicenceTypeCriteria> getCriteriaClass() {
        return LicenceTypeCriteria.class;
    }


    @Override
    protected Class<LicenceTypeVO> getDataClass() {
        return LicenceTypeVO.class;
    }


    @Override
    protected void searchResultsAssertions(ResponseEntity<?> response) {
        // TODO Auto-generated method stub
        
    }


}