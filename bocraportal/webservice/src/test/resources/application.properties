# 
spring.datasource.url=jdbc:postgresql://${POSTGRES_SERVER}/bocraportal_test
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
logging.level.root=INFO

#hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#hibernate.default_batch_fetch_size = 16
spring.jpa.hibernate.ddl-auto = update
#hibernate.cache.use_second_level_cache = false
# hibernate.cache.provider_class = org.hibernate.cache.EhCacheProvider
# hibernate.cache.query_cache_factory = org.hibernate.cache.StandardQueryCacheFactory

bocra.comm.url=${COMM_URL}
bocra.web.url=${WEB_URL}
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration

bocra.client-secret=${KEYCLOAK_API_CLIENT_SECRET}
bocra.scope=openid
bocra.authorization-grant-type=password

bocra.authorization-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/auth
bocra.user-info-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/userinfo
bocra.users-uri=${KEYCLOAK_AUTH_URL}/admin/realms/${KEYCLOAK_REALM}/users
bocra.token-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token
bocra.logout=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/logout
bocra.jwk-set-uri=${KEYCLOAK_AUTH_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/certs

# logging.level.org.springframework.web=${API_LOG_LEVEL}
# logging.level.bw.org.bocra.portal=${API_LOG_LEVEL}

keycloak.realm=${KEYCLOAK_REALM}
keycloak.auth-server-url=${KEYCLOAK_AUTH_URL}
keycloak.ssl-required=none
keycloak.public-client=true
#keycloak resource is the client ID
keycloak.resource=${KEYCLOAK_API_CLIENT}
keycloak.credentials.secret=${KEYCLOAK_API_CLIENT_SECRET}
keycloak.use-resource-role-mappings = true
#The line below will prevent redirect to login page
keycloak.bearer-only=true
# keycloak.truststore=/usr/lib/jvm/java-1.11.0-openjdk-amd64/lib/security/cacerts
# keycloak.truststore-password=changeit
server.connection-timeout=6000