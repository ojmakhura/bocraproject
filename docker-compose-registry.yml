version: "3.9"
services:
  registry: 
    image: registry:2
    volumes:
      - ${BOCRA_DATA}/registry/data:/var/lib/registry
      - ${BOCRA_DATA}/certs:/opt/certs
      - ${BOCRA_DATA}/auth:${BOCRA_DATA}/registry/auth
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /var/lib/registry
      # REGISTRY_AUTH: htpasswd
      # REGISTRY_AUTH_HTPASSWD_PATH: ${BOCRA_DATA}/registry/auth/system_passwd
      # REGISTRY_AUTH_HTPASSWD_REALM: registry-realm
      REGISTRY_AUTH_TOKEN_REALM: https://keycloak.localhost/realms/bocraportal/protocol/docker-v2/auth
      REGISTRY_AUTH_TOKEN_SERVICE: bocraportal-registry
      REGISTRY_AUTH_TOKEN_ISSUER: https://keycloak.localhost/realms/bocraportal
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /opt/certs/registry_trust_chain.pem
    networks:
      traefik-public:
    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          - node.labels.bocraportal_registry == true
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # - "traefik.constraint-label=rogue-public"
        - "traefik.http.routers.registry-http.rule=Host(`${REGISTRY_DOMAIN}`)"
        - "traefik.http.routers.registry-http.entrypoints=${WEB_ENTRY}"
        - "traefik.http.routers.registry-http.middlewares=https-redirect"
        - "traefik.http.routers.registry-https.entrypoints=${WEBSECURE_ENTRY}"
        - "traefik.http.routers.registry-https.rule=Host(`${REGISTRY_DOMAIN}`)"
        - "traefik.http.routers.registry-https.tls=${SSL_SECURE}"
        - "traefik.http.routers.registry-https.tls.certresolver=le"
        - "traefik.http.services.registry.loadbalancer.server.port=5000"

  ###############################################################################
  # Local docker container registry ui
  ###############################################################################
  registry-ui:
    image: parabuzzle/craneoperator:latest
    # ports:
    #   - "8086:80"
    environment:
      - REGISTRY_HOST=${REGISTRY_DOMAIN}
      - REGISTRY_PORT=5000
      - REGISTRY_PROTOCOL=http
      - SSL_VERIFY=false
      - USERNAME=molaodi
      - PASSWORD=molaodi
      - REGISTRY_USERNAME=molaodi
      - REGISTRY_PASSWORD=molaodi
      - TITLE=Private Docker Registry
      - REGISTRY_ALLOW_DELETE=true
    restart: always

    networks:
      traefik-public:
      default:

    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          - node.labels.bocraportal_registry == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        # - traefik.constraint-label=traefik-public
        - traefik.http.routers.registry-ui-http.rule=Host(`${REGISTRY_DOMAIN}/ui`)
        - traefik.http.routers.registry-ui-http.entrypoints=${WEB_ENTRY}
        - traefik.http.routers.registry-ui-http.middlewares=https-redirect
        - traefik.http.routers.registry-ui-https.rule=Host(`${REGISTRY_DOMAIN}/ui`)
        - traefik.http.routers.registry-ui-https.entrypoints=${WEBSECURE_ENTRY}
        - "traefik.http.routers.registry-ui-https.tls=${SSL_SECURE}"
        #- "traefik.http.routers.registry.tls.certresolver=le"
        - traefik.http.services.registry-ui.loadbalancer.server.port=80
###############################################################################
# Networks
###############################################################################
networks:
  traefik-public:
    external: true

