version: '3.9'
services:
  proxy:
    image: traefik:2.8
    hostname: traefik
    networks:
      traefik-public:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 8080:8080
    healthcheck:
      test: [ "CMD", "wget", "http://localhost:8082/ping","--spider" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      # - "--providers.file.directory=/etc/traefik/dynamic_conf/"
      # - "--providers.file.watch=true"
      - "--providers.docker.swarmmode"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.ping.address=:8082"
      - "--log.level=DEBUG"
      - "--accessLog"
      - "--accesslog=true"
      - "--api"
      - "--api.dashboard"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--metrics"
      - "--metrics.prometheus"
      # - "--providers.docker.network=traefik-public"
      # - "--entrypoints.web.http.redirections.entrypoint.to=${ACTIVE_ROUTER_ENTRY}"
      # - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      # - "--certificatesresolvers.le.acme.email=${ACME_EMAIL?Variable not set}"
      # - "--certificatesresolvers.le.acme.storage=${BOCRA_DATA}/traefik/acme.json"
      # - "--certificatesresolvers.le.acme.tlschallenge=true"
    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          - node.labels.bocra_proxy == true
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`${PROXY_DOMAIN}`)"
        - "traefik.http.routers.traefik.entrypoints=${ACTIVE_ROUTER_ENTRY}"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.tls=${SSL_SECURE}"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        - "traefik.docker.network=traefik-public"
        # - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        # - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
        # - "traefik.http.routers.https-redirect.middlewares=https-redirect"
        # - "traefik.http.routers.dashboard.rule=Host(`dash${PROXY_DOMAIN}`)"
        # - "traefik.http.routers.dashboard.service=dashboard@internal"
        # - "traefik.http.routers.dashboard.tls=${SSL_SECURE}"

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  traefik-public:
    external: true