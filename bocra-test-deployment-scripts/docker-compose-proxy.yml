version: '3.9'
services:
  proxy:
    image: traefik:3.0
    hostname: traefik
    networks:
      traefik-public:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${BOCRA_DATA}/auth/system_passwd:/var/system_passwd
      - ${BOCRA_DATA}/certs:/etc/certs
      - ./traefik/config.yml:/etc/traefik/dynamic_conf/conf.yml:ro
    ports:
      - 80:80
      - 443:443
      - 5432:5432
      # - 8080:8080
    healthcheck:
      test: [ "CMD", "wget", "http://localhost:8082/ping","--spider" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmmode"
      - "--providers.docker.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic_conf/"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.postgres.address=:5432"
      - "--entrypoints.registry.address=:5000"
      - "--entrypoints.rabbitmq.address=:5672"
      - "--entryPoints.ping.address=:8082"
      - "--log.level=DEBUG"
      - "--accessLog"
      - "--accesslog=true"
      - "--api"
      - "--api.dashboard"
      - "--ping=true"
      - "--ping.entrypoint=ping"
      - "--metrics"
      - "--metrics.prometheus"
      - "--providers.docker.network=traefik-public"

    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          # - node.labels.bocra_proxy == true
          - node.role == manager
      labels:
        # Enable Traefik for this service, to make it available in the public network
        - traefik.enable=true
        # Use the bocraportal-public network (declared below)
        # - traefik.docker.network=bocraportal-public
        # Use the custom label "traefik.constraint-label=bocraportal-public"
        # This public Traefik will only use services with this label
        # That way you can add other internal Traefik instances per stack if needed
        # - traefik.constraint-label=bocraportal-public
        # admin-auth middleware with HTTP Basic auth
        # Using the environment variables USERNAME and HASHED_PASSWORD
        # - traefik.http.middlewares.admin-auth.basicauth.usersfile=/var/system_passwd
        # - traefik.http.routers.bocraportal-public-https.middlewares=admin-auth
        # https-redirect middleware to redirect HTTP to HTTPS
        # It can be re-used by other stacks in other Docker Compose files
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        # traefik-http set up only to use the middleware to redirect to https
        # Uses the environment variable DOMAIN
        - traefik.http.routers.bocraportal-public-http.rule=Host(`${PROXY_DOMAIN}`)
        - traefik.http.routers.bocraportal-public-http.entrypoints=web
        - traefik.http.routers.bocraportal-public-http.middlewares=https-redirect
        # traefik-https the actual router using HTTPS
        # Uses the environment variable DOMAIN
        - traefik.http.routers.bocraportal-public-https.rule=Host(`${PROXY_DOMAIN}`)
        - traefik.http.routers.bocraportal-public-https.entrypoints=websecure
        - traefik.http.routers.bocraportal-public-https.tls=true
        # Use the special Traefik service api@internal with the web UI/Dashboard
        - traefik.http.routers.bocraportal-public-https.service=api@internal
        # Use the "le" (Let's Encrypt) resolver created below
        # - traefik.http.routers.bocraportal-public-https.tls.certresolver=le
        # Define the port inside of the Docker service to use
        - traefik.http.services.bocraportal-public.loadbalancer.server.port=8080

networks:
  # Use the previously created public network "bocraportal-public", shared with other
  # services that need to be publicly available via this Traefik
  traefik-public:
    external: true
